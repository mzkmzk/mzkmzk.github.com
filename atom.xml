<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[K]]></title>
  <link href="http://mzkmzk.github.io/atom.xml" rel="self"/>
  <link href="http://mzkmzk.github.io/"/>
  <updated>2015-10-05T00:06:37+08:00</updated>
  <id>http://mzkmzk.github.io/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[系统分析师UML项目实战书籍阅读总结]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/10/01/uml_project_book/"/>
    <updated>2015-10-01T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/10/01/uml_project_book</id>
    <content type="html"><![CDATA[<!--more-->


<h3>1. UML项目现场</h3>

<p><code>只有平庸的人,才会提出复杂的解决方案</code></p>

<p>UML建模顺序: 流程建模 -> 用例建模 ->领域建模</p>

<p>活动图,用例图,类图的图标名称介绍.</p>

<h3>2. 业务流程建模</h3>

<p>业务流程定义:</p>

<ol>
<li>特定的客户</li>
<li>特定的目标</li>
<li>特定的服务</li>
</ol>


<p>对于不重要的工作,不做活动图</p>

<p>表2-1 活动图用于表示业务流程或系统流程</p>

<table>
<thead>
<tr>
<th> 项目\活动图  </th>
<th> 业务流程                                  </th>
<th> 系统流程                                  </th>
</tr>
</thead>
<tbody>
<tr>
<td> 主要作用      </td>
<td>                   表示企业组织的未来流程   </td>
<td> 表示系统内部的系统流程                     </td>
</tr>
<tr>
<td> 人工操作      </td>
<td> 可能出现人工操作                          </td>
<td> 不会出现人工操作                          </td>
</tr>
<tr>
<td> 生成机时      </td>
<td> 需求分析阶段                                </td>
<td> 系统设计时间                                </td>
</tr>
<tr>
<td> 相关文件      </td>
<td> 收录在系统需求的规格书(SRS)                </td>
<td> 收录在系统设计规格书(SDS)                   </td>
</tr>
<tr>
<td> 绘制者         </td>
<td> 系统分析师                                   </td>
<td> 系统设计师                                   </td>
</tr>
<tr>
<td> 观看者         </td>
<td> 客户/用户(系统设计师也会参考使用)          </td>
<td> 程序设计师                                   </td>
</tr>
<tr>
<td> 粒度            </td>
<td> 一张活动图对应多个用例(即将用例视为黑箱)   </td>
<td> 一张活动图对应一个用例(即将用例视为白盒)   </td>
</tr>
</tbody>
</table>


<p>表2-2 于系统设计时间的活动图和顺序图</p>

<table>
<thead>
<tr>
<th> 项目/图类型  </th>
<th> 活动图(系统流程)                           </th>
<th> 顺序图(对象互动)                               </th>
</tr>
</thead>
<tbody>
<tr>
<td> 主要作用      </td>
<td> 表示系统内部的系统流程                     </td>
<td> 表示系统内部的对象互动                         </td>
</tr>
<tr>
<td> 主要特色      </td>
<td> 凸显流程与控制节点                           </td>
<td> 凸显对象依序调用方法或函数                       </td>
</tr>
<tr>
<td> 生成时机      </td>
<td> 高级的系统设计时间                           </td>
<td> 细部的系统设计时间                               </td>
</tr>
<tr>
<td> 相关文件      </td>
<td> 收录在系统设计规格书(SDS)                   </td>
<td> 同左                                            </td>
</tr>
<tr>
<td> 实作情况      </td>
<td> 无法直接对应程序代码                        </td>
<td> 可以直接对应程序代码(有些UML工具可以自动产码)     </td>
</tr>
<tr>
<td> 绘制者         </td>
<td> 系统设计师                                   </td>
<td> 同左                                            </td>
</tr>
<tr>
<td> 观看者         </td>
<td> 程序设计师                                   </td>
<td> 同左                                            </td>
</tr>
<tr>
<td> 粒度            </td>
<td> 一张活动图对应一个用例(即将用例视为白箱)   </td>
<td> 同左                                            </td>
</tr>
</tbody>
</table>


<p>活动图图标:</p>

<ol>
<li>起始节点: 实心小圆 (建议一个活动图 一个起始节点)</li>
<li>活动终点: 双圆,内实外空</li>
<li>判断节点: 空心菱形</li>
<li><p>动作: 圆角矩形 动作粒度要与用例粒度相近</p>

<p> 4.1 第一行: (一个动作负责人)</p>

<p> 4.2 第二行: 动作名称,动词开头</p></li>
<li>合并节点: 空心菱形</li>
<li>活动: 圆角矩形,右下角三叉图标 (活动可拆分外令一个活动图 )</li>
<li>分叉与会合: 粗线段 (等所有条件具备进行下一阶段 建议分叉与会合成对出现)</li>
<li>对象节点: 矩形 (代表流入/流出的数据项)</li>
</ol>


<h3>3. 用例建模</h3>

<p>用例来源:</p>

<ol>
<li>业务流程</li>
<li>功能流程</li>
<li>其他用例</li>
</ol>


<p>建议同时生成用例图和功能架构图.</p>

<p>用例图作用:</p>

<ol>
<li>规范一套动作</li>
<li>明确结果</li>
<li>表明参与者 (参与者包括主要参与者(启动者)和次要参与者)</li>
</ol>


<p>业务流程导出初版用例</p>

<ol>
<li>查看动作,动作负责人即为参与者,动作即为用例</li>
<li>查看判断节点,判断判断节点是否需要其他用例支持</li>
</ol>


<p>功能划分->业务流程->初版用例->功能架构->用例图->用例描述</p>

<p>用例描述:</p>

<ol>
<li>前置条件: 执行流程前必须要满足的条件</li>
<li>主要流程: 一般正常的流程 (主要详细分为参与者输入,系统处理过程,及输出,要求非常详细!)</li>
<li>替换流程: 特殊情况 (替换流程的编号,紧跟发生特殊情况的主要流程编号)</li>
<li>后置条件: 必须要完成的结果</li>
</ol>


<p>包含关系与扩展关系</p>

<ol>
<li><p>包含关系: <code>&lt;&lt;include&gt;&gt;</code> 虚线箭头指向被包含 被包含可视为<code>前置条件</code></p>

<p> 1.1 被包含的小用例无法脱离基础用例而单独存在</p>

<p> 1.2 基础用例一定执行被包含的小用例</p>

<p> 1.3 两者加起来是一条流程</p></li>
<li><p>扩展关系: <code>&lt;&lt;extends&gt;&gt;</code> 虚线箭头直线被扩展 扩展可不执行 ,可视为<code>替换流程</code></p>

<p> 2.1 拓展的小用例无法脱离基础用例而单独存在</p>

<p> 2.2 基础用例不一定执行拓展的小用例</p>

<p> 2.3 两者加起来是两条流程,其一是单独的基础用例,其二是基础用例外加拓展用例</p></li>
</ol>


<h3>4. 领域建模</h3>

<p>领域模型:</p>

<ol>
<li>一种概念模型,呈现问题领域中的重要概念</li>
<li>描述问题领域中的实体,实体属性,操作,角色,关系和限制.</li>
<li>对于用例所描述的互动过程,领域模型可以为用例起支持结构作用.</li>
<li>通常用类图描述领域模型.</li>
<li>领域模式可用于出代码</li>
</ol>


<p>类图:</p>

<ol>
<li>类用矩形表示,第一行为名称,第二行为属性,第三行为操作</li>
<li>属性 属性名称:数据类型=初始值</li>
<li>操作 操作名称(参数,数据类型):返回值数据类型</li>
<li><p>结合关系: 实线 表示两个领域存在重要且需要永久保存的静态关系</p>

<p> 4.1 单向结合 无法从目标端找回来源端</p>

<p> 4.2 双向结合</p>

<p> 4.3 聚合关系 空心菱形 指向聚合类 整体-部分</p>

<p> 4.4 组合关系 实心菱形 组合关系具有聚合关系的所有特性另加部分对象只会链接到一个整体对象,不允许数个整体对象共用一个部分对象,部分对象跟随整体对象的存活.</p>

<p> 4.3 个体数目 下限..上限 表明关系:一对一,一对多,多对多.多对一.</p></li>
</ol>


<p>用例描述推导领域模型</p>

<ol>
<li>查看用例描述,把其中的数据项归到领域中.</li>
<li>类代表领域,数据项代表属性</li>
<li>查看概念之间的关系</li>
<li>根据关系在两端添加数量</li>
</ol>


<p>领域模型呈现业务规则</p>

<ol>
<li>通过结合关系和个体数目来表达关系静态结构的业务规则</li>
<li>通过操作来表达计算公司以及一些需要查验或检核的业务规则</li>
</ol>


<h3>5. 模型走读</h3>

<p>作用:检测模型质量</p>

<p>走读功能架构图与用例图</p>

<ol>
<li>是否可以从功能架构图追溯到用例图 (最好情况: 直接采用用例作为功能架构图中的功能)</li>
<li>检测功能架构图中的系统,功能模块,用例名称是否和用例图一致</li>
<li>若功能模块和底下的功能模块与客户的征求建议书(RFP)不一致,则需请求客户同意,看功能模块的切割、名称、地下的功能归属是否恰当.</li>
</ol>


<p>走读中遇到的问题及其解决方案:</p>

<ol>
<li>出现多个用例参与一个用例入口 解决:用例图中参与者第二行标明{or }</li>
</ol>


<p>走读用例图和用例描述</p>

<ol>
<li>检测参与者是否摆在系统方框之外,在系统方框和功能模块方框最上方要用标注&lt;\&lt;系统>>或&lt;\&lt;功能模块>></li>
<li>用例描述每一个步骤都以参与者或系统开头</li>
</ol>


<p>界面雏形工具: Pencil</p>

<p>走读用例描述与领域模型</p>

<ol>
<li>主要查看是否遗漏数据项(属性)、业务规则和重要操作</li>
</ol>


<h5>善用对象图</h5>

<p>对象图是系统的快照,可表示某一时刻或某一场景系统内有哪些重要对象,属性的数值以及他们之间的关系.</p>

<p>在绘制对象图,想好场景,一边套场景,一边通过对象图走读领域模型</p>

<p>用对象图发现用例描述某一动作不能执行, 解决方案 增加用例辅助完成.</p>

<h4>领域模式描述:</h4>

<p>领域模式主要通过文字记录类别、属性、结合、限制的定义或解释、操作</p>

<h3>6. 继续走读</h3>

<p>走读中做了几个调整.</p>

<p>1.整合应整合用例(自动汇整集锦交易与自动申购基金)</p>

<p>非功能性需求可以添加到用例描述中或建立单独一个表格供整个系统参考.</p>

<p>走读领域,可搭配情景对象图.这个很重要,其实在做系统测试时候,完全可以按照这个来.</p>

<h3>7. 基金系统范例</h3>

<p>以功能模块拆分用例图.</p>

<p>主要把前面章节的图 汇总在一起.</p>

<h3>总结</h3>

<p>第四章的结合实例来说领域模型很精彩</p>

<p>重复地方很多,有利有弊.</p>

<p>对于整个系统流程来说,算是不错的体验.能够让读者大概明白UML的大概过程,每一步应该做什么.然后循环迭代.这和敏捷开发的思想很像.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP工具]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/30/php_utils/"/>
    <updated>2015-09-30T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/30/php_utils</id>
    <content type="html"><![CDATA[<!--more-->


<h3>IDE</h3>

<p>PHPStore</p>

<p>官网下载</p>

<p>破解码<code>EMBRACE</code></p>

<p>参考<a href="http://orgcent.com/phpstorm-register-key-license/">http://orgcent.com/phpstorm-register-key-license/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel 错误积累]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/30/Laravel_error/"/>
    <updated>2015-09-30T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/30/Laravel_error</id>
    <content type="html"><![CDATA[<!--more-->


<h4>[Laravel5] TokenMismatchException in VerifyCsrfToken</h4>

<p>form表单内添加</p>

<pre><code>&lt;input type="hidden" name="_token" value=""&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laraval 入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/24/Lavarel-start/"/>
    <updated>2015-09-24T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/24/Lavarel-start</id>
    <content type="html"><![CDATA[<!--more-->


<h2>配置与安装</h2>

<p>需要条件:</p>

<pre><code>- PHP &gt;= 5.5.9 - OpenSSL PHP 扩展 - PDO PHP 扩展 - Mbstring PHP 扩展 - Tokenizer PHP 扩展
</code></pre>

<p>查看方式:<code>phpinfo();</code></p>

<p>配置composer.</p>

<p>配置<code>~/.composer/vendor/bin</code>到PATH</p>

<p>安装Laravel</p>

<pre><code>sudo composer global require "laravel/installer=~1.1"
</code></pre>

<p>之后就<code>laravel new blog</code> 爽一爽</p>

<p>/config里都是配置文件 需要仔细看看.</p>

<p>配置/storage和bootstrap/cache服务器写权限</p>

<pre><code> chmod -R  777   storage/
 chmod -R  777   bootstrap/cache
</code></pre>

<p>ok,把项目放进apache路径 然后</p>

<pre><code>http://localhost/laravel/public/
</code></pre>

<p>就会看到Laravel 5字样了</p>

<p>我们自己试一试弄一个页面吧</p>

<p>打开<code>/app/Http/routes.php</code>,设置Url跳转和传递title参数</p>

<pre><code>Route::get('/hi',function(){
return View::make('hi')-&gt;with("title","Hello Word");
});
</code></pre>

<p>打开<code>/resources/views</code>创建hi.blade.php</p>

<pre><code>@include('header')
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;one Laravel&lt;/p&gt;
</code></pre>

<p>再在其目录下创建header.blade.php</p>

<pre><code>&lt;p&gt;header&lt;/p&gt;
</code></pre>

<p>ok 访问url<code>http://localhost/laravel/public/index.php/hi</code></p>

<p>如何去掉可恶的index.php</p>

<ol>
<li>设置apache支持.htaccess,打开apache http.conf,搜索<code>AllowOverride</code> 把None都改为All</li>
<li>设置加载mod_rewrite模块,打开apache http.conf,搜索<code>mod_rewrite</code>,把前面的#去掉(校验方法-php_info()),重启下apache哦~.</li>
<li><p>设置Laravel的.htaccess,把下面的内容代替之前的内容.</p>

<pre><code> Options +FollowSymLinks
 RewriteEngine On

 RewriteCond %{REQUEST_FILENAME} !-d
 RewriteCond %{REQUEST_FILENAME} !-f
 RewriteRule ^ index.php [L]
</code></pre></li>
</ol>


<p>ok<code>http://localhost/laravel/public/hi</code>爽一发吧.</p>

<p>参考链接<a href="http://oublog.cn/u_58/">http://oublog.cn/u_58/</a></p>

<p>环境配置</p>

<pre><code>//获取系统配置
config('app.timezone')
//设置系统配置
config(['app.timezone' =&gt; 'Asia/Shanghai'])
</code></pre>

<h3>路由</h3>

<p>访问Controllers</p>

<pre><code>Route::get('/Text_Laravel/Text_DB','Text_Laravel.Text_DB@index');
</code></pre>

<p>访问View</p>

<pre><code>Route::get('/User/Login',function () {
return view('User.Login');
});
</code></pre>

<h3>数据库配制</h3>

<p>配置文件<code>config/database.php</code></p>

<p>Laravel还可以配置读写两个不同的ip地址.</p>

<pre><code>'mysql' =&gt; [
'read' =&gt; [
    'host' =&gt; '192.168.1.1',
],
'write' =&gt; [
    'host' =&gt; '196.168.1.2'
],
'driver'    =&gt; 'mysql',
'database'  =&gt; 'database',
'username'  =&gt; 'root',
'password'  =&gt; '',
'charset'   =&gt; 'utf8',
'collation' =&gt; 'utf8_unicode_ci',
'prefix'    =&gt; '',
],
</code></pre>

<p>光配置这个还不行 还要去配置.env ? 难道.env是通过config实时生成的?</p>

<h2>阅读API文档</h2>

<p><a href="http://www.golaravel.com/laravel/docs/5.1/">http://www.golaravel.com/laravel/docs/5.1/</a></p>

<h3>routing</h3>

<p><a href="http://laravel.com/docs/5.1/routing">http://laravel.com/docs/5.1/routing</a></p>

<p>路由配置在<code>app/Http/routes.php</code></p>

<p>先来看下简单的配置,get,post请求,还有match,any匹配多种请求,还有通过url传递参数(参数不能包含<code>-</code>),</p>

<h2>应用中碰到的应用</h2>

<h3>获取路径</h3>

<p>获取相对于目录的绝对路径</p>

<p>详见<a href="http://www.golaravel.com/laravel/docs/5.1/helpers/#paths">http://www.golaravel.com/laravel/docs/5.1/helpers/#paths</a></p>

<ol>
<li><p>获取网络路径</p></li>
<li><p>关闭CSRF,<code>App\Http;\Kernel</code>,注释</p>

<pre><code>  // \App\Http\Middleware\VerifyCsrfToken::class,
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js 坑点]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/21/js_error/"/>
    <updated>2015-09-21T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/21/js_error</id>
    <content type="html"><![CDATA[<h1>未解决</h1>

<p>莫名其妙.在div中设置onclick方法就能找该方法,在包含下的input下就找不到.</p>

<pre><code>'&lt;div class="col-sm-1" onclick="delete_library()"&gt;'+
        '&lt;input  onclick="delete_library()" class="btn btn-info" id="delete_library_'+new_library_num+'" name="delete_library" value="删除"   style="width:100%"  /&gt;'+    
    '&lt;/div&gt;';
</code></pre>

<h1>已解决</h1>

<ol>
<li>jquery的ajax中不能再方法内return,返回的都是undefinte;</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开发规范]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/21/develop_norm/"/>
    <updated>2015-09-21T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/21/develop_norm</id>
    <content type="html"><![CDATA[<h3>ALL</h3>

<p>文件和文件夹用<em>,方法和变量用驼峰
在函数名和变量名种一个</em>分割功能,描述一个功能的两个单词用驼峰</p>

<p>包名 首字母大写</p>

<h3>JS</h3>

<h3>CSS</h3>

<h3>HTML</h3>

<ol>
<li>在控件中,id绝对不能重复,要重复.宁可不设</li>
</ol>


<h3>Adnroid</h3>

<h3>php</h3>

<h3>iOS</h3>

<h3>ERROR</h3>

<ol>
<li>类 方法 错误 参数;</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phpUnit 入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/16/phpUnit_start/"/>
    <updated>2015-09-16T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/16/phpUnit_start</id>
    <content type="html"><![CDATA[<h3>参考链接</h3>

<p>高大上的API<a href="https://phpunit.de/manual/current/zh_cn/">https://phpunit.de/manual/current/zh_cn/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php Composer 入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/16/php-composer/"/>
    <updated>2015-09-16T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/16/php-composer</id>
    <content type="html"><![CDATA[<h3>安装</h3>

<pre><code>curl -sS https://getcomposer.org/installer | php
sudo mv ~/Learning/php/Composer/composer.phar  /usr/local/bin/composer
composer //即可
</code></pre>

<h3>安装phpUnit</h3>

<p>在项目下新建<code>composer.json</code>,配置号需要的安装包</p>

<pre><code>{
    "require-dev": {
        "phpunit/phpunit-selenium": "&gt;=1.2"
    }
}
</code></pre>

<p>安装</p>

<pre><code>cd 项目目录
composer.phar install

//一开始是这样的
Loading composer repositories with package information
Installing dependencies (including require-dev)
Failed to decode response: zlib_decode(): data error
Retrying with degraded mode, check https://getcomposer.org/doc/articles/troubleshooting.md#degraded-mode for more info

//后面再等等好了
</code></pre>

<h3>设置全局Composer</h3>

<pre><code>composer global [全局组件]
</code></pre>

<h3>使用Composer中Vendor命令</h3>

<pre><code>PATH="/Users/maizhikun/.composer/vendor/bin/:${PATH}"
</code></pre>

<h3>参考链接</h3>

<p>安装参考<a href="http://www.phpcomposer.com/">http://www.phpcomposer.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[决策性错误]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/16/my_error/"/>
    <updated>2015-09-16T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/16/my_error</id>
    <content type="html"><![CDATA[<ol>
<li>给别的部门表需要填写Excel时,一定要填写好规则.不然会把自己累死&hellip;</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发总结]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/10/android_summarization/"/>
    <updated>2015-09-10T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/10/android_summarization</id>
    <content type="html"><![CDATA[<ol>
<li>命名规范时,要保增加/删除其他功能时命名不用改变</li>
<li>模块化,一般大量调用后就不要轻易改变.作为一个基础.不然其他调用此模块的代码都需要改变</li>
<li>不错的参考模块<a href="http://www.codeceo.com/article/android-code-style-guide.html">http://www.codeceo.com/article/android-code-style-guide.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android adb]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/10/android_adb_order/"/>
    <updated>2015-09-10T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/10/android_adb_order</id>
    <content type="html"><![CDATA[<ol>
<li>adb device 显示连接的设备</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_常见小问题]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/09/php_question/"/>
    <updated>2015-09-09T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/09/php_question</id>
    <content type="html"><![CDATA[<h3>0x00 php echo 返回JSON但莫名多了&amp;#65279</h3>

<p>原因:调用的文件中存储UTF-8 BOM 把格式改为UTF-8即可</p>

<p>js正则也可以去除此字符</p>

<pre><code>//去除返回数据前后空白符
function trim(str){
str = str.replace(/^\s\s*/, ''),
ws = /\s/,
i = str.length;
while (ws.test(str.charAt(--i)));
return str.slice(0, i + 1);
}
</code></pre>

<p>但是想把该代码转为JAVA的,但对正则不太了解.日后再说.</p>

<h3>0x01 foreach改变数组无效</h3>

<p>用foreach改变数组无用,用普通for即可..</p>

<pre><code>//for ($index = 0 ;$index&lt; count($rs);$index++){
        //  $rs[$index] = array_merge($rs[$index], $patient_Model-&gt;query_name($rs[$index]['patient_id']));
            //array_push($rs[$index], array('patient_name'=&gt;$patient_Model-&gt;query_name($rs[$index]['patient_id'])));
        //}
        foreach ($rs as $rs_one){
            $rs_one = array_merge($rs_one, $patient_Model-&gt;query_name($rs_one['patient_id']));
            //array_push($rs_one, array('patient_name'=&gt;$patient_Model-&gt;query_name($rs_one['patient_id'])));
            //print_r($rs_one);
        }
</code></pre>

<h3>php 升级到5.6</h3>

<p><a href="http://php-osx.liip.ch/">http://php-osx.liip.ch/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidStudio技巧]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/07/AS_kill/"/>
    <updated>2015-09-07T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/07/AS_kill</id>
    <content type="html"><![CDATA[<h3>0x00 AS的提示总结</h3>

<ol>
<li><code>command+O</code>:显示当前文件所有函数</li>
<li><code>command+I</code>:显示接口文件的所有函数</li>
<li><code>ctrl+option+space</code>:补全提示</li>
<li><code>command+N</code>:一些可以自动生成的代码例如get,set</li>
<li><code>command+option+W</code>:可以快速定位视图</li>
<li><code>command+option+Z</code>:选择使用快速生成ifelse/Runable等代码</li>
<li><code>control+option+上/下</code>:搜索选定单词的下个位置</li>
<li><code>control+shift+/</code>:多行注释</li>
<li><code>control+Q</code>:返回上一个修改的光标处</li>
<li><code>command+E</code>:选择文件</li>
<li><code>control+shitf+J</code>:两行合为一行</li>
<li><code>commnad+option+V</code>:移动当前文件之&hellip;</li>
<li><code>command+option+O</code>:搜索特定的方法</li>
<li><code>control+'(1旁边)</code>:切换变成模式</li>
<li><code>command+3</code>:查找制定action</li>
<li><code>command+1</code>:fix action</li>
<li><code>control+h</code>:全局搜索</li>
<li><code>command+shitf+T</code>搜索class</li>
<li><code>command+shitf+G</code></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_配置记录错误文件]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/06/php_error_log/"/>
    <updated>2015-09-06T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/06/php_error_log</id>
    <content type="html"><![CDATA[<h3>0x00 配置php.ini</h3>

<p>php.ini中设置</p>

<pre><code>log_errors = On
error_log = /var/log/php_errors.log
</code></pre>

<p>重启服务器 Mac:<code>sudo /usr/sbin/apachectl restart</code></p>

<h3>添加错误文件</h3>

<p>这个非常重要.由于当时我添加文件写错了名字&hellip;导致耽误了很多时间..吐槽一下..php不能自己自动添加文件吗?权限问题?不应该</p>

<p>安装error_log添加文件然后给权限777就行.</p>

<h3>其他参考</h3>

<p>错误级别error_reporting设置<a href="http://www.vfeelit.com/232.html">http://www.vfeelit.com/232.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 配置mysql配置文件]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/06/mac_mysql_cnf/"/>
    <updated>2015-09-06T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/06/mac_mysql_cnf</id>
    <content type="html"><![CDATA[<p>参考mysql系统设置<code>SHOW VARIABLES</code></p>

<h3>0x00 copy my.cnf</h3>

<p>Mac默认没有这个文件.用系统默认的配置</p>

<p>要想更改的话</p>

<pre><code>cd /usr/local/mysql/support-files/
</code></pre>

<p>在此文件夹里面任意复制一个.cnf到/etc下也就行</p>

<h3>各种小配置</h3>

<ol>
<li><p>设置记录sql文件</p>

<pre><code> [mysqld]段内增加
 //记录使用过的预计
 general_log = 1
 general_log_file = 文件路径

 //另外命令也可开关.不过应该是临时的
 SET GLOBAL general_log = 'ON';
 SET GLOBAL general_log = 'OFF';

 //并不知道有神马用
 slow_query_log = 1 

 //系统报错文件
  /usr/local/mysql/data/K.local.err  

  log_bin= /var/log/mysql/mysql-bin.log
</code></pre>

<p> 参考链接<a href="http://hessian.cn/p/1018.html">http://hessian.cn/p/1018.html</a></p></li>
<li><p>限定访问ip</p>

<pre><code> //若想其他机器能登录,注释掉此句
 #bind-address           = 127.0.0.1
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_selenium入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/05/php_selenium/"/>
    <updated>2015-09-05T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/05/php_selenium</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/15/node_js_start/"/>
    <updated>2015-08-15T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/15/node_js_start</id>
    <content type="html"><![CDATA[<h3>下载安装包</h3>

<p><a href="https://nodejs.org/download/">https://nodejs.org/download/</a></p>

<p>安装完成后的信息</p>

<pre><code>Node was installed at

/usr/local/bin/node

npm was installed at

/usr/local/bin/npm

Make sure that /usr/local/bin is in your $PATH.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设计参考模板]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/11/Design/"/>
    <updated>2015-08-11T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/11/Design</id>
    <content type="html"><![CDATA[<h3>Web</h3>

<p>后台<a href="http://www.templatemo.com/live/templatemo_455_visual_admin">http://www.templatemo.com/live/templatemo_455_visual_admin</a></p>

<p>APP
<a href="http://www.invisionapp.com/do">http://www.invisionapp.com/do</a></p>

<p>后台
<a href="https://creativemarket.com/Endless/16193-Perfect-Admin">https://creativemarket.com/Endless/16193-Perfect-Admin</a></p>

<p>UI<a href="http://www.ui.cn/">http://www.ui.cn/</a></p>

<p>站酷<a href="http://www.zcool.com.cn/">http://www.zcool.com.cn/</a></p>

<p>洛可可
<a href="http://www.lkkdesign.com/">http://www.lkkdesign.com/</a></p>

<p><a href="https://dribbble.com/">https://dribbble.com/</a></p>

<p>后台模板
<a href="http://optimisticdesigns.herokuapp.com/landerv2/html/form-wizard.html">http://optimisticdesigns.herokuapp.com/landerv2/html/form-wizard.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html 使用积累]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/07/html_%20accumulated/"/>
    <updated>2015-08-07T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/07/html_ accumulated</id>
    <content type="html"><![CDATA[<p>隐藏html</p>

<ol>
<li>display:none|block; 隐藏不占据空间.</li>
<li>visibility：hidden|visible; 隐藏仍占据空间;</li>
</ol>


<h3>css3 html支持浏览器程度查询</h3>

<p><a href="http://caniuse.com/">http://caniuse.com/</a></p>

<h3>css@import和link的区别</h3>

<p><a href="http://www.dreamdu.com/blog/2007/05/11/css_link_import/">http://www.dreamdu.com/blog/2007/05/11/css_link_import/</a></p>

<h3>好用的框架</h3>

<p>类似于alert的作用,但是用户无需点击它,它会自动显示在右下角,用户体验棒很多<a href="http://github.hubspot.com/messenger/docs/welcome/">http://github.hubspot.com/messenger/docs/welcome/</a></p>

<p>bootcdn<a href="http://www.bootcdn.cn/">http://www.bootcdn.cn/</a>各大框架的各版本链接</p>

<h3>待消化框架</h3>

<p>做动画效果的<a href="http://tumult.com/hype/">http://tumult.com/hype/</a></p>

<h3>零散知识点</h3>

<ol>
<li><code>&lt;code&gt;</code>标签通常只是把文本变成等宽字体,但它暗示着这段文本是源程序代码.</li>
<li><code>&lt;th scope="col|row|colgroup|rowgroup"&gt;</code>对普通浏览器无作用,但是被作为阅读器理解为头部.</li>
<li><p><code>vertical-align</code>可能的值:</p>

<p> 3.1 <code>baseline</code>元素放置在父元素基线上</p>

<p> 3.2 <code>sub</code>垂直对齐文本下标</p>

<p> 3.3 <code>super</code>垂直对齐文本上标</p>

<p> 3.4 <code>%</code>使用line-height属性的百分比值来排列元素,允许使用负值</p>

<p> 3.5 <code>inherit</code>从父类继承</p>

<p> 3.5 其余:top,text-top,middle,buttom,text-bottom,length</p></li>
</ol>


<p>4.<code>float</code>使用后magin 0 auto会失去作用,因为float的布局会移出文档流.</p>

<h3>Bootstrap 理解</h3>

<ol>
<li><code>.col-xs-12 .col-sm-6 .col-md-8</code>表示 当屏幕小于768时,按xs走,屏幕分辨率在768-996时按sm走,大于996后按md走</li>
<li>使用表格样式<code>.table</code>,<code>.table-striped</code>斑马线样式,<code>.table-bordered</code>带边框,<code>.table-hover</code>悬停样式,<code>table-condensed</code>紧凑,<code>table-responsive</code>滚动条响应式</li>
</ol>


<h3>控件状态</h3>

<p>以a标签为例</p>

<pre><code>a:link {color: #FF0000} /* 未访问的链接 */
a:visited {color: #00FF00} /* 已访问的链接 */
a:hover {color: #FF00FF} /* 鼠标移动到链接上 */
a:active {color: #0000FF} /* 选定的链接 */
</code></pre>

<h3>规范性</h3>

<p>1.标签中的的顺序</p>

<pre><code>class
id, name
data-*
src, for, type, href
title, alt
aria-*, role
</code></pre>

<h3>零散属性收集</h3>

<ol>
<li><p>background:</p>

<pre><code> background-color
 background-position
 background-size
 background-repeat 
 background-origin
 background-clip
 background-attachment
 background-image :url()
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Axure入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/29/Axure_start/"/>
    <updated>2015-07-29T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/29/Axure_start</id>
    <content type="html"><![CDATA[<!--more-->


<h3>0x00 安装 &amp;&amp; 破解 &amp;&amp; 汉化</h3>

<p><a href="http://www.woshipm.com/xiazai/58714.html">http://www.woshipm.com/xiazai/58714.html</a></p>

<h3>Demo</h3>

<p><a href="http://www.douban.com/group/topic/39697467/">http://www.douban.com/group/topic/39697467/</a>
<a href="http://blog.sina.com.cn/s/blog_7256fe8f0101b29t.html">http://blog.sina.com.cn/s/blog_7256fe8f0101b29t.html</a></p>

<p>侧滑和弹窗效果实现记录</p>

<h3>教程</h3>

<p><a href="http://www.woshipm.com/rp/39208.html">http://www.woshipm.com/rp/39208.html</a></p>
]]></content>
  </entry>
  
</feed>
