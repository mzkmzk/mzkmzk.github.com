<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[K]]></title>
  <link href="http://mzkmzk.github.io/atom.xml" rel="self"/>
  <link href="http://mzkmzk.github.io/"/>
  <updated>2015-09-30T11:20:24+08:00</updated>
  <id>http://mzkmzk.github.io/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Laraval 入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/24/Lavaral-start/"/>
    <updated>2015-09-24T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/24/Lavaral-start</id>
    <content type="html"><![CDATA[<!--more-->


<h2>配置与安装</h2>

<p>需要条件:</p>

<pre><code>- PHP &gt;= 5.5.9 - OpenSSL PHP 扩展 - PDO PHP 扩展 - Mbstring PHP 扩展 - Tokenizer PHP 扩展
</code></pre>

<p>查看方式:<code>phpinfo();</code></p>

<p>配置composer.</p>

<p>配置<code>~/.composer/vendor/bin</code>到PATH</p>

<p>安装Laravel</p>

<pre><code>sudo composer global require "laravel/installer=~1.1"
</code></pre>

<p>之后就<code>laravel new blog</code> 爽一爽</p>

<p>/config里都是配置文件 需要仔细看看.</p>

<p>配置/storage和bootstrap/cache服务器写权限</p>

<pre><code> chmod -R  777   storage/
 chmod -R  777   bootstrap/cache
</code></pre>

<p>ok,把项目放进apache路径 然后</p>

<pre><code>http://localhost/laravel/public/
</code></pre>

<p>就会看到Laravel 5字样了</p>

<p>我们自己试一试弄一个页面吧</p>

<p>打开<code>/app/Http/routes.php</code>,设置Url跳转和传递title参数</p>

<pre><code>Route::get('/hi',function(){
return View::make('hi')-&gt;with("title","Hello Word");
});
</code></pre>

<p>打开<code>/resources/views</code>创建hi.blade.php</p>

<pre><code>@include('header')
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;one Laravel&lt;/p&gt;
</code></pre>

<p>再在其目录下创建header.blade.php</p>

<pre><code>&lt;p&gt;header&lt;/p&gt;
</code></pre>

<p>ok 访问url<code>http://localhost/laravel/public/index.php/hi</code></p>

<p>如何去掉可恶的index.php</p>

<ol>
<li>设置apache支持.htaccess,打开apache http.conf,搜索<code>AllowOverride</code> 把None都改为All</li>
<li>设置加载mod_rewrite模块,打开apache http.conf,搜索<code>mod_rewrite</code>,把前面的#去掉(校验方法-php_info()),重启下apache哦~.</li>
<li><p>设置Laravel的.htaccess,把下面的内容代替之前的内容.</p>

<pre><code> Options +FollowSymLinks
 RewriteEngine On

 RewriteCond %{REQUEST_FILENAME} !-d
 RewriteCond %{REQUEST_FILENAME} !-f
 RewriteRule ^ index.php [L]
</code></pre></li>
</ol>


<p>ok<code>http://localhost/laravel/public/hi</code>爽一发吧.</p>

<p>参考链接<a href="http://oublog.cn/u_58/">http://oublog.cn/u_58/</a></p>

<p>环境配置</p>

<pre><code>//获取系统配置
config('app.timezone')
//设置系统配置
config(['app.timezone' =&gt; 'Asia/Shanghai'])
</code></pre>

<h3>路由</h3>

<p>访问Controllers</p>

<pre><code>Route::get('/Text_Laravel/Text_DB','Text_Laravel.Text_DB@index');
</code></pre>

<p>访问View</p>

<pre><code>Route::get('/User/Login',function () {
return view('User.Login');
});
</code></pre>

<h3>数据库配制</h3>

<p>配置文件<code>config/database.php</code></p>

<p>Laravel还可以配置读写两个不同的ip地址.</p>

<pre><code>'mysql' =&gt; [
'read' =&gt; [
    'host' =&gt; '192.168.1.1',
],
'write' =&gt; [
    'host' =&gt; '196.168.1.2'
],
'driver'    =&gt; 'mysql',
'database'  =&gt; 'database',
'username'  =&gt; 'root',
'password'  =&gt; '',
'charset'   =&gt; 'utf8',
'collation' =&gt; 'utf8_unicode_ci',
'prefix'    =&gt; '',
],
</code></pre>

<p>光配置这个还不行 还要去配置.env ? 难道.env是通过config实时生成的?</p>

<h2>阅读API文档</h2>

<p><a href="http://www.golaravel.com/laravel/docs/5.1/">http://www.golaravel.com/laravel/docs/5.1/</a></p>

<h3>routing</h3>

<p><a href="http://laravel.com/docs/5.1/routing">http://laravel.com/docs/5.1/routing</a></p>

<p>路由配置在<code>app/Http/routes.php</code></p>

<p>先来看下简单的配置,get,post请求,还有match,any匹配多种请求,还有通过url传递参数(参数不能包含<code>-</code>),</p>

<h2>应用中碰到的应用</h2>

<h3>获取路径</h3>

<p>获取相对于目录的绝对路径</p>

<p>详见<a href="http://www.golaravel.com/laravel/docs/5.1/helpers/#paths">http://www.golaravel.com/laravel/docs/5.1/helpers/#paths</a></p>

<p>获取网络路径</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js 坑点]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/21/js_error/"/>
    <updated>2015-09-21T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/21/js_error</id>
    <content type="html"><![CDATA[<h1>未解决</h1>

<p>莫名其妙.在div中设置onclick方法就能找该方法,在包含下的input下就找不到.</p>

<pre><code>'&lt;div class="col-sm-1" onclick="delete_library()"&gt;'+
        '&lt;input  onclick="delete_library()" class="btn btn-info" id="delete_library_'+new_library_num+'" name="delete_library" value="删除"   style="width:100%"  /&gt;'+    
    '&lt;/div&gt;';
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开发规范]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/21/develop_norm/"/>
    <updated>2015-09-21T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/21/develop_norm</id>
    <content type="html"><![CDATA[<h3>ALL</h3>

<p>在函数名和变量名种一个_分割功能,描述一个功能的两个单词用驼峰</p>

<p>包名 首字母大写</p>

<h3>JS</h3>

<h3>CSS</h3>

<h3>HTML</h3>

<ol>
<li>在控件中,id绝对不能重复,要重复.宁可不设</li>
</ol>


<h3>Adnroid</h3>

<h3>php</h3>

<h3>iOS</h3>

<h3>ERROR</h3>

<ol>
<li>类 方法 错误 参数;</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phpUnit 入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/16/phpUnit_start/"/>
    <updated>2015-09-16T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/16/phpUnit_start</id>
    <content type="html"><![CDATA[<h3>参考链接</h3>

<p>高大上的API<a href="https://phpunit.de/manual/current/zh_cn/">https://phpunit.de/manual/current/zh_cn/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php Composer 入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/16/php-composer/"/>
    <updated>2015-09-16T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/16/php-composer</id>
    <content type="html"><![CDATA[<h3>安装</h3>

<pre><code>curl -sS https://getcomposer.org/installer | php
sudo mv ~/Learning/php/Composer/composer.phar  /usr/local/bin/composer
composer //即可
</code></pre>

<h3>安装phpUnit</h3>

<p>在项目下新建<code>composer.json</code>,配置号需要的安装包</p>

<pre><code>{
    "require-dev": {
        "phpunit/phpunit-selenium": "&gt;=1.2"
    }
}
</code></pre>

<p>安装</p>

<pre><code>cd 项目目录
composer.phar install

//一开始是这样的
Loading composer repositories with package information
Installing dependencies (including require-dev)
Failed to decode response: zlib_decode(): data error
Retrying with degraded mode, check https://getcomposer.org/doc/articles/troubleshooting.md#degraded-mode for more info

//后面再等等好了
</code></pre>

<h3>设置全局Composer</h3>

<pre><code>composer global [全局组件]
</code></pre>

<h3>使用Composer中Vendor命令</h3>

<pre><code>PATH="/Users/maizhikun/.composer/vendor/bin/:${PATH}"
</code></pre>

<h3>参考链接</h3>

<p>安装参考<a href="http://www.phpcomposer.com/">http://www.phpcomposer.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[决策性错误]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/16/my_error/"/>
    <updated>2015-09-16T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/16/my_error</id>
    <content type="html"><![CDATA[<ol>
<li>给别的部门表需要填写Excel时,一定要填写好规则.不然会把自己累死&hellip;</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发总结]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/10/android_summarization/"/>
    <updated>2015-09-10T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/10/android_summarization</id>
    <content type="html"><![CDATA[<ol>
<li>命名规范时,要保增加/删除其他功能时命名不用改变</li>
<li>模块化,一般大量调用后就不要轻易改变.作为一个基础.不然其他调用此模块的代码都需要改变</li>
<li>不错的参考模块<a href="http://www.codeceo.com/article/android-code-style-guide.html">http://www.codeceo.com/article/android-code-style-guide.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android adb]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/10/android_adb_order/"/>
    <updated>2015-09-10T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/10/android_adb_order</id>
    <content type="html"><![CDATA[<ol>
<li>adb device 显示连接的设备</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_常见小问题]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/09/php_question/"/>
    <updated>2015-09-09T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/09/php_question</id>
    <content type="html"><![CDATA[<h3>0x00 php echo 返回JSON但莫名多了&amp;#65279</h3>

<p>原因:调用的文件中存储UTF-8 BOM 把格式改为UTF-8即可</p>

<p>js正则也可以去除此字符</p>

<pre><code>//去除返回数据前后空白符
function trim(str){
str = str.replace(/^\s\s*/, ''),
ws = /\s/,
i = str.length;
while (ws.test(str.charAt(--i)));
return str.slice(0, i + 1);
}
</code></pre>

<p>但是想把该代码转为JAVA的,但对正则不太了解.日后再说.</p>

<h3>0x01 foreach改变数组无效</h3>

<p>用foreach改变数组无用,用普通for即可..</p>

<pre><code>//for ($index = 0 ;$index&lt; count($rs);$index++){
        //  $rs[$index] = array_merge($rs[$index], $patient_Model-&gt;query_name($rs[$index]['patient_id']));
            //array_push($rs[$index], array('patient_name'=&gt;$patient_Model-&gt;query_name($rs[$index]['patient_id'])));
        //}
        foreach ($rs as $rs_one){
            $rs_one = array_merge($rs_one, $patient_Model-&gt;query_name($rs_one['patient_id']));
            //array_push($rs_one, array('patient_name'=&gt;$patient_Model-&gt;query_name($rs_one['patient_id'])));
            //print_r($rs_one);
        }
</code></pre>

<h3>php 升级到5.6</h3>

<p><a href="http://php-osx.liip.ch/">http://php-osx.liip.ch/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidStudio技巧]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/07/AS_kill/"/>
    <updated>2015-09-07T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/07/AS_kill</id>
    <content type="html"><![CDATA[<h3>0x00 AS的提示总结</h3>

<ol>
<li><code>command+O</code>:显示当前文件所有函数</li>
<li><code>command+I</code>:显示接口文件的所有函数</li>
<li><code>ctrl+option+space</code>:补全提示</li>
<li><code>command+N</code>:一些可以自动生成的代码例如get,set</li>
<li><code>command+option+W</code>:可以快速定位视图</li>
<li><code>command+option+Z</code>:选择使用快速生成ifelse/Runable等代码</li>
<li><code>control+option+上/下</code>:搜索选定单词的下个位置</li>
<li><code>control+shift+/</code>:多行注释</li>
<li><code>control+Q</code>:返回上一个修改的光标处</li>
<li><code>command+E</code>:选择文件</li>
<li><code>control+shitf+J</code>:两行合为一行</li>
<li><code>commnad+option+V</code>:移动当前文件之&hellip;</li>
<li><code>command+option+O</code>:搜索特定的方法</li>
<li><code>control+'(1旁边)</code>:切换变成模式</li>
<li><code>command+3</code>:查找制定action</li>
<li><code>command+1</code>:fix action</li>
<li><code>control+h</code>:全局搜索</li>
<li><code>command+shitf+T</code>搜索class</li>
<li><code>command+shitf+G</code></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_配置记录错误文件]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/06/php_error_log/"/>
    <updated>2015-09-06T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/06/php_error_log</id>
    <content type="html"><![CDATA[<h3>0x00 配置php.ini</h3>

<p>php.ini中设置</p>

<pre><code>log_errors = On
error_log = /var/log/php_errors.log
</code></pre>

<p>重启服务器 Mac:<code>sudo /usr/sbin/apachectl restart</code></p>

<h3>添加错误文件</h3>

<p>这个非常重要.由于当时我添加文件写错了名字&hellip;导致耽误了很多时间..吐槽一下..php不能自己自动添加文件吗?权限问题?不应该</p>

<p>安装error_log添加文件然后给权限777就行.</p>

<h3>其他参考</h3>

<p>错误级别error_reporting设置<a href="http://www.vfeelit.com/232.html">http://www.vfeelit.com/232.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 配置mysql配置文件]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/06/mac_mysql_cnf/"/>
    <updated>2015-09-06T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/06/mac_mysql_cnf</id>
    <content type="html"><![CDATA[<p>参考mysql系统设置<code>SHOW VARIABLES</code></p>

<h3>0x00 copy my.cnf</h3>

<p>Mac默认没有这个文件.用系统默认的配置</p>

<p>要想更改的话</p>

<pre><code>cd /usr/local/mysql/support-files/
</code></pre>

<p>在此文件夹里面任意复制一个.cnf到/etc下也就行</p>

<h3>各种小配置</h3>

<ol>
<li><p>设置记录sql文件</p>

<pre><code> [mysqld]段内增加
 //记录使用过的预计
 general_log = 1
 general_log_file = 文件路径

 //另外命令也可开关.不过应该是临时的
 SET GLOBAL general_log = 'ON';
 SET GLOBAL general_log = 'OFF';

 //并不知道有神马用
 slow_query_log = 1 

 //系统报错文件
  /usr/local/mysql/data/K.local.err  

  log_bin= /var/log/mysql/mysql-bin.log
</code></pre>

<p> 参考链接<a href="http://hessian.cn/p/1018.html">http://hessian.cn/p/1018.html</a></p></li>
<li><p>限定访问ip</p>

<pre><code> //若想其他机器能登录,注释掉此句
 #bind-address           = 127.0.0.1
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_selenium入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/05/php_selenium/"/>
    <updated>2015-09-05T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/05/php_selenium</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/15/node_js_start/"/>
    <updated>2015-08-15T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/15/node_js_start</id>
    <content type="html"><![CDATA[<h3>下载安装包</h3>

<p><a href="https://nodejs.org/download/">https://nodejs.org/download/</a></p>

<p>安装完成后的信息</p>

<pre><code>Node was installed at

/usr/local/bin/node

npm was installed at

/usr/local/bin/npm

Make sure that /usr/local/bin is in your $PATH.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设计参考模板]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/11/Design/"/>
    <updated>2015-08-11T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/11/Design</id>
    <content type="html"><![CDATA[<h3>Web</h3>

<p>后台<a href="http://www.templatemo.com/live/templatemo_455_visual_admin">http://www.templatemo.com/live/templatemo_455_visual_admin</a></p>

<p>APP
<a href="http://www.invisionapp.com/do">http://www.invisionapp.com/do</a></p>

<p>后台
<a href="https://creativemarket.com/Endless/16193-Perfect-Admin">https://creativemarket.com/Endless/16193-Perfect-Admin</a></p>

<p>UI<a href="http://www.ui.cn/">http://www.ui.cn/</a></p>

<p>站酷<a href="http://www.zcool.com.cn/">http://www.zcool.com.cn/</a></p>

<p>洛可可
<a href="http://www.lkkdesign.com/">http://www.lkkdesign.com/</a></p>

<p><a href="https://dribbble.com/">https://dribbble.com/</a></p>

<p>后台模板
<a href="http://optimisticdesigns.herokuapp.com/landerv2/html/form-wizard.html">http://optimisticdesigns.herokuapp.com/landerv2/html/form-wizard.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html 使用积累]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/07/html_%20accumulated/"/>
    <updated>2015-08-07T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/07/html_ accumulated</id>
    <content type="html"><![CDATA[<p>隐藏html</p>

<ol>
<li>display:none|block; 隐藏不占据空间.</li>
<li>visibility：hidden|visible; 隐藏仍占据空间;</li>
</ol>


<h3>css3 html支持浏览器程度查询</h3>

<p><a href="http://caniuse.com/">http://caniuse.com/</a></p>

<h3>css@import和link的区别</h3>

<p><a href="http://www.dreamdu.com/blog/2007/05/11/css_link_import/">http://www.dreamdu.com/blog/2007/05/11/css_link_import/</a></p>

<h3>好用的框架</h3>

<p>类似于alert的作用,但是用户无需点击它,它会自动显示在右下角,用户体验棒很多<a href="http://github.hubspot.com/messenger/docs/welcome/">http://github.hubspot.com/messenger/docs/welcome/</a></p>

<p>bootcdn<a href="http://www.bootcdn.cn/">http://www.bootcdn.cn/</a>各大框架的各版本链接</p>

<h3>待消化框架</h3>

<p>做动画效果的<a href="http://tumult.com/hype/">http://tumult.com/hype/</a></p>

<h3>零散知识点</h3>

<ol>
<li><code>&lt;code&gt;</code>标签通常只是把文本变成等宽字体,但它暗示着这段文本是源程序代码.</li>
<li><code>&lt;th scope="col|row|colgroup|rowgroup"&gt;</code>对普通浏览器无作用,但是被作为阅读器理解为头部.</li>
<li><p><code>vertical-align</code>可能的值:</p>

<p> 3.1 <code>baseline</code>元素放置在父元素基线上</p>

<p> 3.2 <code>sub</code>垂直对齐文本下标</p>

<p> 3.3 <code>super</code>垂直对齐文本上标</p>

<p> 3.4 <code>%</code>使用line-height属性的百分比值来排列元素,允许使用负值</p>

<p> 3.5 <code>inherit</code>从父类继承</p>

<p> 3.5 其余:top,text-top,middle,buttom,text-bottom,length</p></li>
</ol>


<p>4.<code>float</code>使用后magin 0 auto会失去作用,因为float的布局会移出文档流.</p>

<h3>Bootstrap 理解</h3>

<ol>
<li><code>.col-xs-12 .col-sm-6 .col-md-8</code>表示 当屏幕小于768时,按xs走,屏幕分辨率在768-996时按sm走,大于996后按md走</li>
<li>使用表格样式<code>.table</code>,<code>.table-striped</code>斑马线样式,<code>.table-bordered</code>带边框,<code>.table-hover</code>悬停样式,<code>table-condensed</code>紧凑,<code>table-responsive</code>滚动条响应式</li>
</ol>


<h3>控件状态</h3>

<p>以a标签为例</p>

<pre><code>a:link {color: #FF0000} /* 未访问的链接 */
a:visited {color: #00FF00} /* 已访问的链接 */
a:hover {color: #FF00FF} /* 鼠标移动到链接上 */
a:active {color: #0000FF} /* 选定的链接 */
</code></pre>

<h3>规范性</h3>

<p>1.标签中的的顺序</p>

<pre><code>class
id, name
data-*
src, for, type, href
title, alt
aria-*, role
</code></pre>

<h3>零散属性收集</h3>

<ol>
<li><p>background:</p>

<pre><code> background-color
 background-position
 background-size
 background-repeat 
 background-origin
 background-clip
 background-attachment
 background-image :url()
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Axure入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/29/Axure_start/"/>
    <updated>2015-07-29T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/29/Axure_start</id>
    <content type="html"><![CDATA[<!--more-->


<h3>0x00 安装 &amp;&amp; 破解 &amp;&amp; 汉化</h3>

<p><a href="http://www.woshipm.com/xiazai/58714.html">http://www.woshipm.com/xiazai/58714.html</a></p>

<h3>Demo</h3>

<p><a href="http://www.douban.com/group/topic/39697467/">http://www.douban.com/group/topic/39697467/</a>
<a href="http://blog.sina.com.cn/s/blog_7256fe8f0101b29t.html">http://blog.sina.com.cn/s/blog_7256fe8f0101b29t.html</a></p>

<p>侧滑和弹窗效果实现记录</p>

<h3>教程</h3>

<p><a href="http://www.woshipm.com/rp/39208.html">http://www.woshipm.com/rp/39208.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[react入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/20/react_start/"/>
    <updated>2015-07-20T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/20/react_start</id>
    <content type="html"><![CDATA[<!--more-->


<h3>开始安装使用react</h3>

<p>下载地址<a href="http://facebook.github.io/react/docs/getting-started.html">http://facebook.github.io/react/docs/getting-started.html</a></p>

<p>尝试下载安装包种examaple</p>

<p>先安装node.js</p>

<ol>
<li><p>examples/basic-jsx-precompile/</p>

<pre><code> npm install -g react-tools
 cd examples/basic-jsx-precompile/
 jsx . build/
</code></pre></li>
</ol>


<h3>参考资料</h3>

<p>react-native 之布局篇<a href="https://github.com/tmallfe/tmallfe.github.io/issues/19">https://github.com/tmallfe/tmallfe.github.io/issues/19</a></p>

<p>react开发者演讲<a href="https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/">https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/</a></p>

<p>react示例阅读<a href="http://www.infoq.com/cn/articles/subversion-front-end-ui-development-framework-react">http://www.infoq.com/cn/articles/subversion-front-end-ui-development-framework-react</a></p>

<p>API<a href="http://facebook.github.io/react-native/docs/troubleshooting.html#content">http://facebook.github.io/react-native/docs/troubleshooting.html#content</a></p>

<p>在线开发环境<a href="https://jsfiddle.net/reactjs/69z2wepo/">https://jsfiddle.net/reactjs/69z2wepo/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 入门常见问题]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/20/iOS_Start/"/>
    <updated>2015-07-20T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/20/iOS_Start</id>
    <content type="html"><![CDATA[<h3>1. Device os version lower than deployment target</h3>

<p>我把手机连接电脑后,准备跑项目,但是Xcode提醒<code>Device os version lower than deployment target</code></p>

<p>原因是项目要求最低版本高于手机版本,单击项目修改D<code>eployment Target即可</code></p>

<p>API<a href="https://developer.apple.com/library/ios/navigation/">https://developer.apple.com/library/ios/navigation/</a></p>

<p>学习视频<a href="http://open.163.com/special/opencourse/ios8.html">http://open.163.com/special/opencourse/ios8.html</a></p>

<h4>/Users/maizhikun/Learning/iOS/workspace/Calculatoer/Calculatoer/CalculatorBrain.swift:12:22: &lsquo;Printable&rsquo; has been renamed to &lsquo;CustomStringConvertible&rsquo;</h4>

<p> enum Op: Printable改成</p>

<p> enum Op: CustomStringConvertible</p>

<h3>书籍</h3>

<p> <a href="http://www.zhihu.com/question/24004342">http://www.zhihu.com/question/24004342</a></p>

<h3>学习博客</h3>

<p> <a href="http://blog.csdn.net/Yt7589#rd?sukey=fc78a68049a14bb282a9238cb43355c93c53ed2c5959342e3c9a2d814b2888b1f46e19db83593016565093d093f7aff4">http://blog.csdn.net/Yt7589#rd?sukey=fc78a68049a14bb282a9238cb43355c93c53ed2c5959342e3c9a2d814b2888b1f46e19db83593016565093d093f7aff4</a></p>

<h2>白胡子教程笔记</h2>

<h4>第四课Swift和Foundation框架</h4>

<ol>
<li><p>数组</p>

<pre><code> var a = Arry&lt;String&gt;()

 var a = [String]()

 var animals = ["Giraffe","Cow"]

 animals.append("Dog");

 let animal = animals[1]

 for animals in animals {
     println("\(animal)")
 }
</code></pre></li>
<li><p>Dictonary</p>

<pre><code> var pac10teamRankings = Dictionary&lt;String, Int&gt;()

 var pac10teamRankings = [String:Int]()

 pac10teamRankings = ["Stanford":1,"Cal":10]

 let ranking = pac10teamRankings["Ohin State"] //return nil

 for (key , value ) in pack10teamRankings {
     println("\(key) = \(value)")
 }
</code></pre></li>
<li><p>Rabge</p>

<pre><code> struct Range&lt;T&gt;{
     var startIndex :T
     var endIndex: T
 }       
</code></pre>

<p> An Array&rsquo;s range would be a Range<Int></p>

<p> Warning: A String subrange is not Range<Int>(it is Range&lt;String.Index> &hellip; we&rsquo;ll talk later!)</p>

<p> There is special syntax for specifying a Range: either &hellip;(ubclusive) or ..&lt;(open-ended)</p>

<pre><code> let array =["a","b","c","d"]

 let subArray1 = array[2...3] //return ["c","d"]

 let subArray2 = array[2..&lt;3] // return ["c"]

 for i in [27...104]{
 }
</code></pre></li>
<li><p>其他数据类型</p>

<pre><code> NSObject
 NSNumber
 NSDate
 NSData
</code></pre></li>
<li><p>数据类型</p>

<pre><code> //声明
 class CalculatorBrain { }

 struct Vertex  {}

 enum Op {}

 //函数

 func doit(argument: Type) -&gt; ReturnValue{}

 var storedProperty =&lt;initial value&gt;(not enum)

 var computerProperty: Type{
     get {}
     set {}
 }

 //构造函数
 init(argument1: Type, argument2: Typ2, ...){} 
</code></pre>

 三者不同点:

<ol>
<li>Inheritance(class only)</li>
<li>Introspection and castring(class only)</li>
<li>Value type(struct,enum) vs. Referenct type(class)</li>
</ol>
</li>
<li><p>Value vs. Referenct</p>

<p> Value:</p>

<p> You must note any func that can mutate a struct/enum with the keyword <code>mutaint</code></p>

<p> Referenct :</p></li>
<li><p>Methods</p>

<p> 重写父类方法/属性时,要使用<code>override</code></p>

<p> <code>final</code> 标记不能被重写的方法和属性</p>

<pre><code> var d: Double =...

 if d.isSignMinus {
     d =Double.abs(d)
 }

 static func abs(d: Double) -&gt; Double{}


 //Parameter Names 
 1.
 func foo(external internal: Int){
     let local = internal
 }

 func bar() {
     let result = foo(external: 123)
 }

 2.我部想拥有一个外部名
 func foo(_ internal: Int){
     let local = internal
 }

 func bar(){
     let result = foo(123)
 }

 3. 必须要外部名
 func foo(#internal: Int){
     let local = internal
 }

 func bar(){
     let result = foo(internal: 123)
 }

 4.
 func foo(first: Int, second: Double){
     let local =internal
 }

 func bar(){
     let result = foo(123, second 5.5)
 }

 5. 
 fimc fpp(first: Int, externalSecond second: Double){
     let local =internal //?这是不是错了?
 }

 func bar(){
     let result = foo(123, externalSecond: 5.5)
 }

 6. 
 func foo(first: Int, _ second: Double){
     let local = internal 
 }

 func bar(){
     let result =foo(123,5.5)
 }
</code></pre></li>
<li><p>Properties</p>

<pre><code> var someStoredProperty: Int =42{
     willset { newValue is the new value }
     didSet {oldValue is the old value }
 }

  var inheritedProperty {
     willSet { newValue is the new value}
     didSet { oldValue is the old value}
 }
</code></pre>

<p> Lazy Initialization (惰性实例化)</p>

<p> 只有var 可以用lazy ,let不可以</p>

<pre><code> lazy var brain = Calculator Brain()

 lazy var someProperty: Type =  {
     return &lt;the constructed value &gt;
 }

 lazy var myProperty =self.initializeMyProperty()
</code></pre></li>
<li><p>Initialization</p>

<p> lazy 或者其他很多方法可以避免initiative</p>

<pre><code> selfinit(&lt;args&gt;)

 super.init(&lt;args&gt;)
</code></pre>

 两种构造方法

<pre><code> 1. Convenience Init
     1. 只能调用本类的designated initializer
     2. 只能通过本类的designated intializer才能访问其他的值
 2. Designated Initalizers(default)
     1. 之前不能有Convenience Init
     2. 只能调用其父类的Designated initializer
     3. 调用父类的Init前,先初始化所有的property
     4. 必须先让父类初始化property才能给子类调用
</code></pre>

<p> 子类没写designated init则继承父类所有的designated init和Converienct init,否则不继承父类的所有designated init</p>

<p> required init 子类必须实现这个方法</p>

<pre><code> init?(arg1: Type1, ...){}

 let image = UIImage(named: "foo")

 if let image = UIImage(named: "foo"){
     successfully 
 }else {
     faled
 }

 let commaSeparatedArrayElements: String = ",".join(myArray)
</code></pre></li>
<li><p>AnyObject</p>

<p>主要用来兼用现有的Object-C和iOS代码</p>

<pre><code>var destinationViewController: AnyObject
var toolbarItems: [AndObject]

func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject)
func appConstraints(constraints: [AnyObject])
func appendDigit(sender: AnyObject)

class func buttonWithType(buttonType: UIButtonType) -&gt; AnyObject

let calcVC = destinationViewController as CalculatorViewController 

if let calcVC = destinationViewController as? CalculatorViewController {...}

---

var toolbarItems: [AnyObject]

for item in toolbarItems {
    if let toolbarItem = item as? UIBarButtonItem{

    }
}

for toolbarItem in toolbarItems as [UIBarButtonItem] {
    //不能使用as? 因为for toolbarItem in nil是无意义的
}

---

let button: AnyObject =UIButton.buttonWithType(UIButtonType.System)

let tutle = (button as UIButton).currentTitle
</code></pre></li>
</ol>


<p>11 Function</p>

<pre><code>//Some Array&lt;T&gt; Methods
+=[T] //not +=T 

var a = [a,b,c]

append(T)

insert(T, atIndex : Int)

splice(Array&lt;T&gt;,atIndex: Int)   a.splice([d,e], atIndex:1),a = [a,d,e,b,c]

removeAtIndex(Int)

removeRange(Range) a.removeRange(0..&lt;2) a = [c]

replaceRange(Range, [T]) //a.replaceRange(0...1 with: [x,y,z]),a= [x,y,z,b]

sort(isOrderedBefore : (T,T)) -&gt; Bool) //e.g a.sort($$0 &lt;$1)

filter(includeElement: (T) -&gt; Bool) -&gt; [T]

let stringified: [String] = [1,2,3].map{ "\($0)"}

let sum: Int = [1,2,3].reduce(0) {$0 + $1}

//String

var s = "hello"

let index = advance(s.startIndex,2) //return  l

s.splice("abc",index) // return heabcllo

let startIndex =advance(s.startIndex,1)

let endIndex = advance(s.startIndex,6)

let substring = s[index..&lt;endIndex] // return eabcl

//String.Index

let num = "56.25"

if let decimalRange = num.rangeOfString("."){
    let wholeNumberPart = num[num.startIndex..&lt;decimalRange.startIndex]
}

s.removeRange([s.startIndex..&lt;decimalRange.startIndex])

//Other String Methods

description -&gt;String //Printable

endIndex -&gt; String.Index

hasPrefix(String)) -&gt; Bool

hasSuffix(String) -&gt; Bool

toInt -&gt; Int?  //not toDouble

capitalizedString -&gt; String 

lowercaseString -&gt; String

uppercaseString -&gt; String 

join(Array) -&gt; String // ",".join(]"1","2",3""]) = "1,2,3"

componentsSeparatedByString(Strign ) -&gt; [String] // "1,2,3".csbs(",") = ["1","2","3"]

//Type Conversion

let d: Double =37.5

let f: Falot = 37.5

let x = Int(d)

let xd = Double(x)

let cgf =CgFloat(d)

let a = Array("abc")  // a = ["a","b","c"]

let s = String(["a","b","c"]) // return s = "abc"

let s = String(52)

let s= "\(37.5)"

//Assertions 

assert(() -&gt; Bpp; ,"message")

e.g: assert(validation() !=nil,"the validation function returned nil")

//Other Functions 

let count = countElements(aCollection) //how many elements in the collection

let sub = dropFirst(aSliceable) //drops the first thing in the sliceable

let sub dropLast(aSliceable) // drops the last thing in the sliceable

let first = first(aCollection) 

let last = last(aCollection)

let prefix = prefix(aSliceable, X:Int)

let suffix = suffix(aSliceable, X: Int)

let reversed: Array = reverse(aCollection)

let backwardsSTRING = String(reverse(s))
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grunt入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/20/grunt_start/"/>
    <updated>2015-07-20T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/20/grunt_start</id>
    <content type="html"><![CDATA[<h3>安装步骤</h3>

<ol>
<li>先安装node.js</li>
<li>输入命令行<code>sudo npm install -g grunt-cli</code></li>
</ol>

]]></content>
  </entry>
  
</feed>
