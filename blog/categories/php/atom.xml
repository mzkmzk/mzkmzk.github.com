<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | K]]></title>
  <link href="http://mzkmzk.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://mzkmzk.github.io/"/>
  <updated>2015-11-03T14:32:22+08:00</updated>
  <id>http://mzkmzk.github.io/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Laravel Migrations]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/11/02/laravel-migrations/"/>
    <updated>2015-11-02T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/11/02/laravel-migrations</id>
    <content type="html"><![CDATA[<!--more-->


<h1>0 目的</h1>

<p>创建Migrations主要的功能是为了让团队能保住使用的数据库结构一致</p>

<h1>1 开玩</h1>

<ol>
<li><p>相关的命令(<code>php artisan list</code>)</p>

<pre><code> migrate:install     Create the migration repository
 migrate:refresh     Reset and re-run all migrations
 migrate:reset       Rollback all database migrations
 migrate:rollback    Rollback the last database migration
 migrate:status      Show the status of each migration
</code></pre>

<p> 创建数据库表(手动创建表不会作用.),因为输入命令后,会在verdor/composer/autoload_classmap.php里映射类.如下</p>

<pre><code>     'Create_Disease_Type' =&gt; $baseDir . '/database/migrations/2015_11_02_153746_Create_Disease_Type.php',
     'CreateInstitutes' =&gt; $baseDir . '/database/migrations/2015_11_02_143144_Create_Institutes.php',

 php artisan make:migration Create_Users --create=Users  
</code></pre></li>
<li><p>创建基础类,设置id、时间戳和软删除.</p>

<p> 一开始自己创建了个<code>Base_Table</code>,不过那样也会创建一个表,所以直接把方法写在<code>Migration</code>里</p>

<pre><code> /**
 * 增加基本属性
 * @param Blueprint $table
 */
 public function add_base_attribute(Blueprint $table)
 {
     $table-&gt;increments('id');
     //创建created_at和updated_at
     $table-&gt;timestamps();
     //创建deleted_at
     $table-&gt;softDeletes();
     return $table;
 }
</code></pre></li>
<li><p>创建外键,注意要先定义外键属性,再设定关系.</p>

<pre><code> public function up()
 {
     Schema::create('Institutes', function (Blueprint $table) {
         $table-&gt;unsignedInteger('institute_ID');
         $table-&gt;foreign('institute_ID')
         -&gt;references('id')-&gt;on('institutes')
         -&gt;onDelete('cascade');
         $table = parent::add_base_attribute($table);
     });
 }  
</code></pre></li>
</ol>


<h1>错误处理</h1>

<ol>
<li>有依赖关系的表,要把外键的表先创建.</li>
<li><p>外键的属性类型要一致,否则会报错<code>General error: 1215 Cannot add foreign key constraint</code></p>

<pre><code> //主表
 $table-&gt;increments('id');

 //从表
 $table-&gt;unsignedInteger('institute_ID');
     $table-&gt;foreign('institute_ID')
     -&gt;references('id')-&gt;on('institutes')
     -&gt;onDelete('cascade');      
</code></pre></li>
<li><p><code>migrations</code>类名不过有下划线</p>

<p> 报错</p>

<pre><code> PHP Fatal error:  Class 'CreateInstitutes' not found in /Users/maizhikun/Learning/apache_sites/HapLab_Laravel/vendor/laravel/framework/src/Illuminate/Database/Migrations/Migrator.php on line 324

 [Symfony\Component\Debug\Exception\FatalErrorException]
 Class 'CreateInstitutes' not found

 //看了下报错地方的源代码.估计是下划线导致.   
 public function resolve($file)
 {
     $file = implode('_', array_slice(explode('_', $file), 4));
     $class = Str::studly($file);
     return new $class;
 }
</code></pre>

<p> 后来又发现了错误.最后确定了是文件名(假如有下划线)会去掉下划线(从时间之后的下划线)然后找相对应的类名.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel 测试]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/10/29/laravel-test/"/>
    <updated>2015-10-29T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/10/29/laravel-test</id>
    <content type="html"><![CDATA[<!--more-->


<p>规则:</p>

<ol>
<li>测试的类名和文件名要以Test结尾.</li>
<li>方法名要以test开头.</li>
<li>文件名不能重复(即使在tests的不同子目录下).</li>
<li><code>tests</code>目录下的<code>TestCase.php</code>并不能删除.然而<code>TestCase.php</code>文件中的<code>$baseurl</code>并没什么卵用.</li>
<li><code>cd</code>到项目中phpunit就可以执行测试了..(对了 官网doucment的<code>php artisan make:test UserTest</code>是无法执行了,作者也表示会修改Document或在未来添加这个命令).</li>
</ol>


<p>来一发Demo.</p>

<pre><code>&lt;?php

use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class User_Test extends TestCase
{
    public function testQuery()
    {
        $this-&gt;post('/Controller/User_Controller/query', ['id' =&gt; '1'])
            -&gt;seeJson([
                'username' =&gt; "admin",
            ]);
    }
}
</code></pre>

<p>一开始我是想在测试每个方法的时候输出一个语句表示测试到哪方法,但是没找到获取哪个类的哪个方法调用了测试方法的方法- -..所以只能输出在测试哪一个类..</p>

<p>修改TestCase.php,增加了<code>error_log("正在测试: " . get_class($this));</code>这么一句,结果是执行了多少个测试方法就输出多少次类名&hellip;求教如何输出方法..</p>

<pre><code>class TestCase extends Illuminate\Foundation\Testing\TestCase
{
    /**
    * The base URL to use while testing the application.
    *
    * @var string
    */
    protected $baseUrl = 'http://localhost';

    /**
    * Creates the application.
    *
    * @return \Illuminate\Foundation\Application
    */
    public function createApplication()
    {
        $app = require __DIR__.'/../bootstrap/app.php';
        error_log("正在测试: " . get_class($this));
        $app-&gt;make(Illuminate\Contracts\Console\Kernel::class)-&gt;bootstrap();

        return $app;
    }
}
</code></pre>

<p>额&hellip;对了重写setUp()方法会在每个测试方法之前都调用..和我们之前实现的效果一样.</p>

<p>注意<code>__construct方法</code>也是每测试一个方法执行一次的.因为每个测试方法是不同的实例,如果想共享变量,请用<code>static</code>.</p>

<h1>遇到的错误</h1>

<ol>
<li><p>程序报错</p>

<p> 1) User_Test::test_Insert
 ErrorException: Invalid argument supplied for foreach()</p>

<p> 原因是seeJson需要返回的是JSON,当返回无法JSON格式化的数据,大多数报这个错误.</p>

<p> 但可恶的是这些错误不会报到报错文件!!所以建议实践操作一次.看错误内容是神马.</p>

<p> 虽然在控制台会显示报错,但是偶尔会显示不全所有报错信息.</p>

<p> <a href="http://stackoverflow.com/questions/31921451/laravel-5-1-phpunit-api-test-returns-always-invalid-argument-error-foreach">参考</a>    ,</p></li>
<li><p>伪集合数组问题</p>

<pre><code> //代码
  $this-&gt;post('/Controller/User_Controller/insert', ['id' =&gt;  $this::$id , 'username' =&gt; $this::$id])
     -&gt;seeJson([
         'result' =&gt; "true",
     ]);

 //报错
 1) User_Test::test_Insert
 Unable to find JSON fragment ["result":"true"] within [{"result":true}].
 Failed asserting that false is true.
</code></pre>

<p> 第一眼看上去以为是前面是数组里的属性,而后面是数组里对象的属性的原因&hellip;.万万没想到..是因为true前后的双引号的原因..在测试类中去掉就好了</p></li>
<li><p>数组需要包含所有属性问题</p>

<p> 问题是我需要检验一个对象中的部分属性,好像实现不了.我的代码</p>

<pre><code>  public function test_Query()
 {
     $this-&gt;post('/Controller/User_Controller/query', ['id' =&gt; $this::$id])
     -&gt;seeJson([
         'data'   =&gt; [ 0 =&gt;['username' =&gt;  $this::$id.'_update']],
     ]);
 }

 //测试结果
 1) User_Test::test_Query
 Unable to find JSON fragment ["data":[{"username":"1137598_update"}]] within [{"current_page":1,"data":[{"created_at":"2015-10-29 18:57:13","deleted_at":"0000-00-00 00:00:00","email":"","id":1137598,"last_login_at":"0000-00-00 00:00:00","login_times":0,"name":"","phone":"","privilege":1,"status":0,"updated_at":"2015-10-29 18:57:13","username":"1137598_update"}],"from":1,"last_page":1,"next_page_url":null,"per_page":20,"prev_page_url":null,"to":1,"total":1}].
 Failed asserting that false is true.    
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress入门]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/10/14/wordpress_study/"/>
    <updated>2015-10-14T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/10/14/wordpress_study</id>
    <content type="html"><![CDATA[<!--more-->


<h1>1 需要实现的功能</h1>

<ol>
<li>升级wordpress</li>
<li>如何写一套自己的主题</li>
<li>wordpress如何使用React</li>
<li>迁移wordpress</li>
</ol>


<h1>4 迁移wordpress</h1>

<ol>
<li>导入数据库</li>
<li>在wp-login.php配置新的数据库信息</li>
<li>在pdf-options填写siteurl为当前url</li>
</ol>


<h1>5 升级wordpress</h1>

<p>自动升级失败->手动点击更新失败</p>

<p>自己去下载覆盖</p>

<ol>
<li>删除wp-admin和wp-includes</li>
<li>其余覆盖于合并</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel 命令]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/10/12/laravel-order/"/>
    <updated>2015-10-12T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/10/12/laravel-order</id>
    <content type="html"><![CDATA[<!--more-->


<ol>
<li><p>命令行爽Eloquent</p>

<pre><code> php artisan tinker
</code></pre>

<p> 这样爽的好处?可以看到返回的类型和执行sql</p>

<pre><code> App\Models\Ready_Sample_Model::all();
 select * from `ready_samples`
 =&gt; Illuminate\Database\Eloquent\Collection {#895
 all: [
App\Models\Ready_Sample_Model {#896
  id: 2646,
  ....
</code></pre></li>
<li><p>新建Model</p>

<pre><code> K:HapLab_Laravel maizhikun$ php artisan make:model Disease_Type_Item_Model
 Models created successfully.
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel Eloquent]]></title>
    <link href="http://mzkmzk.github.io/blog/2015/10/05/laravel-eloquent/"/>
    <updated>2015-10-05T11:37:40+08:00</updated>
    <id>http://mzkmzk.github.io/blog/2015/10/05/laravel-eloquent</id>
    <content type="html"><![CDATA[<!--more-->


<h1>1 疑问点.</h1>

<ol>
<li><p>save方法返回的是true/false;但是delete返回的是1/0,下面是API查的..奇怪&hellip;</p>

<pre><code> bool|null delete()

 Delete the model from the database.

 Return Value

 bool|null   
 Exceptions

 Exception
</code></pre></li>
</ol>


<p>命令行爽Eloquent</p>

<pre><code>cd 项目跟目录
php artisan tinker
</code></pre>

<p>这样爽的好处?可以看到返回的类型和执行sql</p>

<pre><code>App\Models\Ready_Sample_Model::all();
select * from `ready_samples`
=&gt; Illuminate\Database\Eloquent\Collection {#895
 all: [
   App\Models\Ready_Sample_Model {#896
     id: 2646,
     ....
</code></pre>

<p>Model排序</p>

<pre><code>Ready_Sample_Model::all()-&gt;sortByDesc('updated_at')
Ready_Sample_Model::all()-&gt;sort('updated_at')
</code></pre>
]]></content>
  </entry>
  
</feed>
